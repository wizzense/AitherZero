---
name: ü§ù Multi-Agent Coordination (No API Keys Required)

# This workflow coordinates Copilot + AitherZero WITHOUT requiring Claude API keys
# Use your existing $200 Claude subscription manually via web/desktop app

on:
  # React to your manual Claude reviews
  issue_comment:
    types: [created]

  pull_request_review:
    types: [submitted]

  # Manual coordination trigger
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to coordinate'
        type: number
        required: false

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  coordinate:
    name: ü§ù Coordinate AI Agents
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üí¨ Provide Claude Review Template
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue?.number ||
                                context.payload.pull_request?.number ||
                                parseInt('${{ github.event.inputs.pr_number }}');

            if (!issue_number) {
              console.log('No PR/issue number found');
              return;
            }

            // Check if this is a request for Claude review help
            const trigger = context.payload.comment?.body ||
                           context.payload.review?.body || '';

            const needsClaudeHelp = trigger.toLowerCase().includes('@claude') ||
                                   trigger.toLowerCase().includes('claude review') ||
                                   trigger.toLowerCase().includes('ai review');

            if (needsClaudeHelp || context.eventName === 'workflow_dispatch') {
              // Provide instructions for using Claude subscription
              const helpComment = `## ü§ñ Using Your Claude Subscription for Review

**You have a Claude subscription!** Here's how to use it (no API key needed):

### Option 1: Claude.ai Web Interface

1. **Copy PR URL:**
   \`\`\`
   https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${issue_number}
   \`\`\`

2. **Go to:** https://claude.ai/

3. **Paste PR URL and ask:**
   \`\`\`
   Please review this GitHub PR and provide:
   - Code quality assessment
   - Security concerns
   - Performance suggestions
   - Best practices recommendations
   \`\`\`

4. **Copy Claude's response** back to this PR

### Option 2: Claude Desktop App

1. **Open Claude desktop app**
2. **Reference this PR:**
   \`\`\`
   Review PR: https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${issue_number}
   \`\`\`
3. **Claude can analyze it** from your subscription
4. **Copy response** back here

### Option 3: Quick Context for Claude

Copy this and paste into Claude:

\`\`\`
I need a code review for this PR.

Repository: ${context.repo.owner}/${context.repo.repo}
PR #${issue_number}

Please review the changed files and provide:
1. Code quality issues
2. Security concerns
3. Performance optimizations
4. Architecture suggestions

Then I'll tag @copilot to implement your recommendations.
\`\`\`

### After Claude Reviews

Once you have Claude's suggestions:

1. **Post them as a comment** on this PR
2. **Tag Copilot:** \`@copilot implement Claude's suggestions\`
3. **AitherZero will validate** automatically
4. **Review and merge** when ready

---
*ü§ñ No API keys needed - use your existing Claude subscription!*`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: helpComment
              });

              console.log('Posted Claude subscription usage guide');
            }

      - name: ü§ù Detect Claude Response and Coordinate
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue?.number ||
                                context.payload.pull_request?.number ||
                                parseInt('${{ github.event.inputs.pr_number }}');

            if (!issue_number) return;

            // Check if user posted Claude's analysis
            const comment = context.payload.comment?.body ||
                           context.payload.review?.body || '';

            // Look for indicators that this is Claude's analysis
            const hasClaudeResponse = comment.includes('Claude') ||
                                     comment.includes('code review') ||
                                     comment.includes('recommendations') ||
                                     comment.includes('suggestions');

            const hasCopilotMention = comment.includes('@copilot');

            if (hasClaudeResponse && !hasCopilotMention && comment.length > 200) {
              // User posted Claude's review but didn't tag Copilot yet
              const coordinationComment = `## ü§ù AI Coordination Ready

I see you've received analysis!

**Next Steps:**

1. ‚úÖ **Claude analysis** posted above
2. ‚è≠Ô∏è **Tag Copilot** to implement:
   \`\`\`
   @copilot please implement the suggestions above
   \`\`\`
3. ‚è≠Ô∏è **AitherZero validation** will run automatically
4. ‚è≠Ô∏è **Review and merge**

---

### Quick Commands:

\`\`\`powershell
# Run validation locally:
./az.ps1 0404  # Code quality
./az.ps1 0402  # Tests
./az.ps1 0407  # Syntax
\`\`\`

---
*ü§ñ Multi-agent coordination - no API keys required!*`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: coordinationComment
              });

              console.log('Posted coordination guide');
            }

      - name: üîß Run AitherZero Validation
        if: contains(github.event.comment.body, '@copilot') || github.event_name == 'pull_request_review'
        shell: pwsh
        run: |
          Write-Host "üîß Running AitherZero validation..." -ForegroundColor Cyan

          # Quick validation check
          if (Test-Path "./automation-scripts/0404_Run-PSScriptAnalyzer.ps1") {
            Write-Host "‚úÖ PSScriptAnalyzer available" -ForegroundColor Green
          }

          if (Test-Path "./automation-scripts/0402_Run-UnitTests.ps1") {
            Write-Host "‚úÖ Unit tests available" -ForegroundColor Green
          }

          if (Test-Path "./automation-scripts/0407_Validate-Syntax.ps1") {
            Write-Host "‚úÖ Syntax validation available" -ForegroundColor Green
          }

          Write-Host "üí° Full validation will run via CI workflows" -ForegroundColor Yellow

  summary:
    name: üìä Summary
    needs: coordinate
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: üìä Workflow Summary
        run: |
          echo "# ü§ù Multi-Agent Coordination (No API Keys)"
          echo ""
          echo "This workflow helps you use:"
          echo "1. Your existing Claude subscription (manually)"
          echo "2. GitHub Copilot (for implementation)"
          echo "3. AitherZero (for validation)"
          echo ""
          echo "No additional API costs - use what you already have!"
