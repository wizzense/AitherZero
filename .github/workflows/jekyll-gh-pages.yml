# Jekyll site to GitHub Pages - Enhanced with Reports
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'reports/**'
      - 'docs/**'
      - 'index.md'
      - '_config.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Report Deployment
        shell: pwsh
        run: |
          Write-Host "âœ… Successfully deployed to GitHub Pages!" -ForegroundColor Green
          Write-Host "ðŸ”— Main URL: ${{ steps.deployment.outputs.page_url }}" -ForegroundColor Cyan
          Write-Host ""
          Write-Host "ðŸ“Š Available Pages:" -ForegroundColor Yellow
          Write-Host "  - Dashboard: ${{ steps.deployment.outputs.page_url }}reports/dashboard.html"
          Write-Host "  - Reports: ${{ steps.deployment.outputs.page_url }}reports/"
          Write-Host "  - Docs: ${{ steps.deployment.outputs.page_url }}docs/"
