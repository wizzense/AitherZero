name: 🏷️ PR Auto-Labeling
run-name: 🏷️ PR Labels - ${{ github.event.pull_request.title }}

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write

jobs:
  label-pr:
    name: 🏷️ Auto-Label PR
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔍 Analyze PR and Apply Labels
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const body = (pr.body || '').toLowerCase();
            const labels = [];
            
            // Detect type of change
            if (title.includes('breaking') || body.includes('breaking change')) {
              labels.push('breaking-change');
            }
            
            if (title.match(/feat|feature|add|new/) || body.includes('new feature')) {
              labels.push('enhancement');
            }
            
            if (title.match(/fix|bug|patch|hotfix/)) {
              labels.push('bug');
            }
            
            if (title.match(/docs|documentation|readme/)) {
              labels.push('documentation');
            }
            
            if (title.match(/test|testing|ci|workflow/)) {
              labels.push('testing');
            }
            
            if (title.match(/refactor|cleanup|clean up/)) {
              labels.push('maintenance');
            }
            
            // Add labels if any were detected
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: labels
              });
              
              console.log(`Added labels: ${labels.join(', ')}`);
            }
            
            // Add size label based on changes
            const { data: prData } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            const changes = prData.additions + prData.deletions;
            let sizeLabel = '';
            
            if (changes < 10) sizeLabel = 'size/XS';
            else if (changes < 50) sizeLabel = 'size/S';
            else if (changes < 200) sizeLabel = 'size/M';
            else if (changes < 500) sizeLabel = 'size/L';
            else sizeLabel = 'size/XL';
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: [sizeLabel]
            });
            
            console.log(`Added size label: ${sizeLabel} (${changes} changes)`);