name: 🏷️ PR Auto-Labeling
run-name: 🏷️ PR Labels - ${{ github.event.pull_request.title }}

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  label-pr:
    name: 🏷️ Auto-Label PR
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔍 Analyze PR and Apply Labels
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const body = (pr.body || '').toLowerCase();
            const labels = [];
            
            // Detect type of change
            if (title.includes('breaking') || body.includes('breaking change')) {
              labels.push('breaking-change');
            }
            
            if (title.match(/feat|feature|add|new/) || body.includes('new feature')) {
              labels.push('enhancement');
            }
            
            if (title.match(/fix|bug|patch|hotfix/)) {
              labels.push('bug');
            }
            
            if (title.match(/docs|documentation|readme/)) {
              labels.push('documentation');
            }
            
            if (title.match(/test|testing|ci|workflow/)) {
              labels.push('testing');
            }
            
            if (title.match(/refactor|cleanup|clean up/)) {
              labels.push('maintenance');
            }
            
            // Check if labels exist before adding them
            const { data: existingLabels } = await github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const existingLabelNames = existingLabels.map(label => label.name);
            const validLabels = labels.filter(label => existingLabelNames.includes(label));
            
            // Add labels if any valid ones were detected
            if (validLabels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: validLabels
              });
              
              console.log(`Added labels: ${validLabels.join(', ')}`);
            }
            
            if (labels.length > validLabels.length) {
              const missingLabels = labels.filter(label => !existingLabelNames.includes(label));
              console.log(`Skipped missing labels: ${missingLabels.join(', ')}`);
            }
            
            // Add size label based on changes
            const { data: prData } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            const changes = prData.additions + prData.deletions;
            
            // Check if size labels exist and add appropriate one
            const sizeLabels = existingLabelNames.filter(label => label.startsWith('size/'));
            if (sizeLabels.length > 0) {
              let sizeLabel = '';
              
              if (changes < 10 && sizeLabels.includes('size/XS')) sizeLabel = 'size/XS';
              else if (changes < 50 && sizeLabels.includes('size/S')) sizeLabel = 'size/S';
              else if (changes < 200 && sizeLabels.includes('size/M')) sizeLabel = 'size/M';
              else if (changes < 500 && sizeLabels.includes('size/L')) sizeLabel = 'size/L';
              else if (sizeLabels.includes('size/XL')) sizeLabel = 'size/XL';
              
              if (sizeLabel && existingLabelNames.includes(sizeLabel)) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  labels: [sizeLabel]
                });
                
                console.log(`Added size label: ${sizeLabel} (${changes} changes)`);
              } else {
                console.log(`No appropriate size label found for ${changes} changes`);
              }
            } else {
              console.log('No size labels configured in repository');
            }