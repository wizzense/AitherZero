---
name: ü§ñ Claude GitHub App Integration

# This workflow demonstrates how to use an existing Claude GitHub App
# instead of direct API calls

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  use-github-app:
    name: Use Claude GitHub App
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      # Method 1: If you have a GitHub App with an App ID and Private Key
      - name: üîë Generate GitHub App Token
        id: generate-token
        if: ${{ secrets.CLAUDE_APP_ID && secrets.CLAUDE_APP_PRIVATE_KEY }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.CLAUDE_APP_ID }}
          private-key: ${{ secrets.CLAUDE_APP_PRIVATE_KEY }}

      # Method 2: If the GitHub App is already installed and listening to events
      # The app should automatically receive webhooks and respond
      # In this case, you don't need to do anything - just enable the app

      - name: üìä Check if GitHub App is Active
        uses: actions/github-script@v7
        with:
          script: |
            // Check if any Claude-related GitHub App is installed
            try {
              const { data: installations } = await github.rest.apps.listInstallationsForAuthenticatedApp();
              console.log('Installed GitHub Apps:', installations);

              // Look for Claude-related apps
              const claudeApp = installations.find(app =>
                app.app_slug?.includes('claude') ||
                app.app_slug?.includes('anthropic')
              );

              if (claudeApp) {
                console.log('Found Claude GitHub App:', claudeApp.app_slug);
                core.setOutput('claude-app-found', 'true');
                core.setOutput('app-slug', claudeApp.app_slug);
              } else {
                console.log('No Claude GitHub App found');
                core.setOutput('claude-app-found', 'false');
              }
            } catch (error) {
              console.log('Cannot check GitHub Apps (may need different permissions):', error.message);
              core.setOutput('claude-app-found', 'unknown');
            }

      # Method 3: Trigger the GitHub App via comment/label
      - name: üí¨ Trigger GitHub App via Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            // If you have a Claude GitHub App that responds to specific comments or labels,
            // trigger it here

            const prNumber = context.payload.pull_request.number;

            // Option A: Add a label that triggers the app
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['claude-review-requested']  // Adjust based on your app's trigger
            });

            // Option B: Add a comment that triggers the app
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: '@claude-bot please review this PR'  // Adjust based on your app's trigger
            });

      - name: ‚ÑπÔ∏è Information about GitHub Apps
        run: |
          echo "## GitHub App Integration Information"
          echo ""
          echo "If you have a Claude GitHub App installed, it should work via:"
          echo "1. Automatic webhooks (app receives events directly)"
          echo "2. Specific trigger phrases (e.g., '@claude-bot review')"
          echo "3. Labels (e.g., 'claude-review')"
          echo ""
          echo "To configure this workflow with your GitHub App:"
          echo "1. Find your app's trigger mechanism"
          echo "2. Update the trigger logic above"
          echo "3. Ensure the app has necessary permissions"
          echo ""
          echo "Common GitHub App triggers:"
          echo "- Comment: '@app-name command'"
          echo "- Label: 'app-trigger-label'"
          echo "- Automatic on PR open/update"
