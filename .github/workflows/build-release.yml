name: üèóÔ∏è Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PowerShell
        uses: PowerShell/powershell-installer@v1
        with:
          powershell-version: '7.4.0'

      - name: Update version
        shell: pwsh
        run: |
          '${{ github.event.inputs.version }}' | Set-Content -Path 'VERSION'

      - name: Build all packages
        shell: pwsh
        run: |
          # Create dist directory
          New-Item -Path './dist' -ItemType Directory -Force
          
          # Build for all platforms
          foreach ($platform in @('windows', 'linux', 'macos')) {
            Write-Host "Building for $platform..."
            $packageName = "aitherzero-${{ github.event.inputs.version }}-$platform"
            $packagePath = "./dist/$packageName"
            New-Item -Path $packagePath -ItemType Directory -Force
            
            # Copy essential files
            Copy-Item -Path 'aither-core' -Destination $packagePath -Recurse -Force
            Copy-Item -Path 'README.md' -Destination $packagePath -Force
            Copy-Item -Path 'VERSION' -Destination $packagePath -Force
            Copy-Item -Path 'LICENSE' -Destination $packagePath -Force
            
            # Platform-specific packaging
            if ($platform -eq 'windows') {
              Compress-Archive -Path "$packagePath/*" -DestinationPath "./dist/$packageName.zip" -Force
            } else {
              Set-Location './dist'
              tar -czf "$packageName.tar.gz" $packageName
              Set-Location '..'
            }
          }

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          files: dist/*.{zip,tar.gz}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
