name: Build and Release AitherZero

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PowerShell
      shell: pwsh
      run: |
        Write-Host "PowerShell Version: $($PSVersionTable.PSVersion)"
        Write-Host "OS: $($PSVersionTable.OS)"

    - name: Determine Version
      id: version
      shell: pwsh
      run: |
        if ('${{ github.event.inputs.version }}') {
          $version = '${{ github.event.inputs.version }}'
        } elseif ('${{ github.ref_type }}' -eq 'tag') {
          $version = '${{ github.ref_name }}' -replace '^v', ''
        } else {
          $shortSha = '${{ github.sha }}'.Substring(0, 7)
          $version = "dev-$shortSha"
        }

        Write-Host "Version: $version"
        "version=$version" >> $env:GITHUB_OUTPUT

    - name: Build Release Package
      shell: pwsh
      run: |
        $version = '${{ steps.version.outputs.version }}'
        Write-Host "Building AitherZero version: $version"

        # Create dist directory
        New-Item -Path './dist' -ItemType Directory -Force

        # Run build script
        $result = & './build/Build-Release.ps1' -BuildType Release -Version $version -OutputPath './dist' -Force

        Write-Host "Build completed successfully"
        Write-Host "Package: $($result.PackagePath)"
        Write-Host "Size: $($result.SizeMB) MB"

        # Set outputs for later steps
        "package-path=$($result.PackagePath)" >> $env:GITHUB_OUTPUT
        "checksum-path=$($result.ChecksumPath)" >> $env:GITHUB_OUTPUT
        "size-mb=$($result.SizeMB)" >> $env:GITHUB_OUTPUT
      id: build

    - name: Build Portable Package
      shell: pwsh
      run: |
        $version = '${{ steps.version.outputs.version }}'
        Write-Host "Building Portable package..."

        $result = & './build/Build-Release.ps1' -BuildType Portable -Version $version -OutputPath './dist' -Force

        Write-Host "Portable build completed"
        "portable-package-path=$($result.PackagePath)" >> $env:GITHUB_OUTPUT
        "portable-checksum-path=$($result.ChecksumPath)" >> $env:GITHUB_OUTPUT
      id: build-portable

    - name: Build Development Package (with tests)
      shell: pwsh
      run: |
        $version = '${{ steps.version.outputs.version }}'
        Write-Host "Building Development package with tests..."

        $result = & './build/Build-Release.ps1' -BuildType Development -Version $version -OutputPath './dist' -IncludeTests -Force

        Write-Host "Development build completed"
        "dev-package-path=$($result.PackagePath)" >> $env:GITHUB_OUTPUT
        "dev-checksum-path=$($result.ChecksumPath)" >> $env:GITHUB_OUTPUT
      id: build-dev

    - name: Generate Release Notes
      shell: pwsh
      run: |
        $version = '${{ steps.version.outputs.version }}'

        $releaseNotes = @"
        # AitherZero $version

        ## üì¶ Downloads

        Choose the package that best fits your needs:

        ### üöÄ Standard Release (Recommended)
        - **AitherZero-$version-Release.zip** - Complete framework for production use
        - Includes all modules, templates, and documentation
        - Size: ${{ steps.build.outputs.size-mb }} MB

        ### üíº Portable Version
        - **AitherZero-$version-Portable.zip** - Lightweight portable version
        - Perfect for USB drives or temporary installations

        ### üõ†Ô∏è Development Version
        - **AitherZero-$version-Development.zip** - Includes test suite and development tools
        - For contributors and advanced users

        ## üöÄ Quick Start

        1. Download the Release package above
        2. Extract the ZIP file
        3. Run ``Start-AitherZero.bat`` (Windows) or ``Start-AitherZero.ps1`` (PowerShell)
        4. Follow the setup wizard

        ## üìã Installation Options

        ### Windows Quick Install
        ``````batch
        # Extract the ZIP, then run:
        Start-AitherZero.bat
        ``````

        ### PowerShell Install
        ``````powershell
        # Extract the ZIP, then run:
        .\Start-AitherZero.ps1
        ``````

        ### System Installation
        ``````powershell
        # Extract the ZIP, then run:
        .\Install-AitherZero.ps1 -CreateDesktopShortcut -AddToPath
        ``````

        ## ‚úÖ Verification

        All packages include SHA256 checksums for verification:

        ``````powershell
        # Verify package integrity
        `$expectedHash = Get-Content AitherZero-$version-Release.zip.sha256
        `$actualHash = (Get-FileHash AitherZero-$version-Release.zip -Algorithm SHA256).Hash.ToLower()
        if (`$expectedHash.Split(' ')[0] -eq `$actualHash) {
            Write-Host "‚úÖ Package verified successfully" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Package verification failed" -ForegroundColor Red
        }
        ``````

        ## üîÑ What's New

        - Professional build and release system
        - Self-contained packages with launchers
        - Multiple installation options
        - Comprehensive verification system
        - Improved cross-platform compatibility

        ## üìö Documentation

        - [GitHub Repository](https://github.com/wizzense/AitherZero)
        - [Complete Documentation](https://github.com/wizzense/AitherZero/tree/main/docs)
        - [Getting Started Guide](https://github.com/wizzense/AitherZero/blob/main/README.md)

        ## üêõ Issues and Support

        Found a bug or need help? [Create an issue](https://github.com/wizzense/AitherZero/issues/new)
        "@

        $releaseNotes | Out-File -FilePath './release-notes.md' -Encoding UTF8
        Write-Host "Generated release notes"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aitherzero-packages-${{ steps.version.outputs.version }}
        path: |
          dist/*.zip
          dist/*.sha256
          release-notes.md
        retention-days: 90

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: aitherzero-packages-${{ needs.build.outputs.version }}
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', github.event.inputs.version) }}
        name: AitherZero ${{ needs.build.outputs.version }}
        body_path: ./artifacts/release-notes.md
        files: |
          ./artifacts/*.zip
          ./artifacts/*.sha256
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
