name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    # PowerShell is pre-installed on GitHub runners
      
    - name: Get Version from Tag
      id: get_version
      shell: bash
      run: |
        # Extract version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Build All Packages
      shell: pwsh
      run: |
        Write-Host "Building all packages for version ${{ steps.get_version.outputs.version }}"
        ./build/Build-Package.ps1 -Platform all -Version "${{ steps.get_version.outputs.version }}"
        
        # List created packages
        Write-Host "`nCreated packages:"
        Get-ChildItem ./build/output -Filter "AitherZero-*" | ForEach-Object {
            Write-Host "  - $($_.Name) ($('{0:N2}' -f ($_.Length / 1MB)) MB)"
        }
        
    - name: Read Changelog
      id: changelog
      shell: pwsh
      run: |
        # Extract changelog for this version
        $version = "${{ steps.get_version.outputs.version }}"
        $changelogPath = "./CHANGELOG.md"
        $releaseNotes = ""
        
        if (Test-Path $changelogPath) {
            $content = Get-Content $changelogPath -Raw
            # Try to extract section for this version
            if ($content -match "(?ms)## \[?v?$([regex]::Escape($version))\]?.*?(?=## \[|$)") {
                $releaseNotes = $matches[0].Trim()
                # Remove the header line
                $releaseNotes = $releaseNotes -replace "^## \[?v?$([regex]::Escape($version))\]?.*?`n", ""
            }
        }
        
        if (-not $releaseNotes) {
            $releaseNotes = "New release with improvements and bug fixes"
        }
        
        # Output for GitHub Actions (handle multiline)
        $releaseNotes = $releaseNotes -replace "`r`n", "`n"
        $releaseNotes = $releaseNotes -replace "`n", "%0A"
        $releaseNotes = $releaseNotes -replace "`r", "%0D"
        echo "notes=$releaseNotes" >> $env:GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: AitherZero v${{ steps.get_version.outputs.version }}
        body: |
          ## 🚀 AitherZero v${{ steps.get_version.outputs.version }}
          
          ${{ steps.changelog.outputs.notes }}
          
          ### 📦 Downloads
          
          | Platform | Package | Size |
          |----------|---------|------|
          | 🪟 **Windows** | `AitherZero-v${{ steps.get_version.outputs.version }}-windows.zip` | ~15-20 MB |
          | 🐧 **Linux** | `AitherZero-v${{ steps.get_version.outputs.version }}-linux.tar.gz` | ~15-20 MB |
          | 🍎 **macOS** | `AitherZero-v${{ steps.get_version.outputs.version }}-macos.tar.gz` | ~15-20 MB |
          
          ### 🚀 Quick Installation
          
          #### Windows (PowerShell)
          ```powershell
          # One-line install
          iex (irm "https://raw.githubusercontent.com/wizzense/AitherZero/main/bootstrap.ps1")
          ```
          
          #### Linux/macOS (Bash)
          ```bash
          # One-line install
          curl -sSL https://raw.githubusercontent.com/wizzense/AitherZero/main/bootstrap.sh | bash
          ```
          
          ### 📖 Documentation
          
          - [Quick Start Guide](https://github.com/${{ github.repository }}/blob/main/QUICKSTART.md)
          - [Full Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
          
        files: build/output/AitherZero-*
        draft: false
        prerelease: false
        fail_on_unmatched_files: true
        generate_release_notes: true