name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'VERSION'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      description:
        description: 'Release description'
        required: false
        default: 'New release'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get Version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_OUTPUT
          echo "DESCRIPTION=${{ inputs.description }}" >> $GITHUB_OUTPUT
        else
          # Auto-triggered by VERSION file change
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          # Extract description from last commit
          DESCRIPTION=$(git log -1 --pretty=%B | head -n 1)
          echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_OUTPUT
        fi
        
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
    - name: Create Release Tag
      run: |
        git tag -a "v${{ steps.version.outputs.VERSION }}" -m "${{ steps.version.outputs.DESCRIPTION }}"
        git push origin "v${{ steps.version.outputs.VERSION }}"
        
    - name: Build Packages
      shell: pwsh
      run: |
        ./build/Build-Package.ps1 -Version "${{ steps.version.outputs.VERSION }}"
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## ${{ steps.version.outputs.DESCRIPTION }}
          
          ### Installation
          
          Download the appropriate package for your platform below.
          
        files: |
          build/output/*.zip
          build/output/*.tar.gz
        draft: false
        prerelease: false