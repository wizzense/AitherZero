name: Release

on:
  # Trigger comprehensive report workflow for releases
  workflow_run:
    workflows: ["CI - Continuous Integration"]
    types:
      - completed
    branches: [main, 'patch/**']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
      force_release:
        description: 'Force release even if CI validation incomplete'
        type: boolean
        default: false

# Ensure only one release runs at a time
concurrency:
  group: release-workflow
  cancel-in-progress: false

# Permissions for GITHUB_TOKEN
permissions:
  contents: write
  actions: write
  packages: write
  pull-requests: write

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: true

jobs:
  # Validate CI completion and check release readiness
  validate-release:
    name: Validate Release Requirements
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event.workflow_run.conclusion == 'success') ||
      (github.event.workflow_run.conclusion == 'failure' && contains(github.event.workflow_run.head_branch, 'main'))
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
      version-number: ${{ steps.version.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Cache git metadata
      uses: actions/cache@v4
      with:
        path: .git
        key: ${{ runner.os }}-git-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-git-
        
    - name: Check release readiness
      id: check
      shell: pwsh
      run: |
        Write-Host "🔍 Checking release readiness..." -ForegroundColor Cyan
        
        $shouldRelease = $false
        
        if ('${{ github.event_name }}' -eq 'workflow_dispatch') {
          Write-Host "📝 Manual release triggered" -ForegroundColor Yellow
          $shouldRelease = $true
        } else {
          # Check if VERSION file was changed in the CI run
          $headSha = '${{ github.event.workflow_run.head_sha }}'
          $changedFiles = git diff-tree --no-commit-id --name-only -r $headSha 2>$null
          if (-not $changedFiles) {
            # Fallback: check against previous commit
            $changedFiles = git diff --name-only HEAD~1 HEAD 2>$null
          }
          $versionChanged = $changedFiles -contains 'VERSION'
          
          if ($versionChanged) {
            Write-Host "📝 VERSION file was updated - this is a release!" -ForegroundColor Green
            $shouldRelease = $true
          } else {
            Write-Host "ℹ️ VERSION file not changed - not a release commit" -ForegroundColor Yellow
            $shouldRelease = $false
          }
        }
        
        if ('${{ github.event.inputs.force_release }}' -eq 'true') {
          Write-Host "⚠️ Force release enabled" -ForegroundColor Yellow
          $shouldRelease = $true
        }
        
        Write-Host "📊 Release Decision:" -ForegroundColor Cyan
        Write-Host "  Should Release: $shouldRelease" -ForegroundColor White
        
        echo "should-release=$shouldRelease" >> $env:GITHUB_OUTPUT
        
    - name: Get version information
      id: version
      shell: pwsh
      run: |
        $version = '${{ github.event.inputs.version }}'
        
        # If not provided, get from VERSION file
        if (-not $version) {
          if (Test-Path "./VERSION") {
            $version = (Get-Content "./VERSION").Trim()
            Write-Host "📖 Version from VERSION file: $version" -ForegroundColor Cyan
          } else {
            Write-Host "⚠️ VERSION file not found, using default" -ForegroundColor Yellow
            $version = "0.0.1"
          }
        } else {
          Write-Host "📝 Version from manual input: $version" -ForegroundColor Cyan
        }
        
        echo "version=$version" >> $env:GITHUB_OUTPUT

  # Trigger comprehensive report workflow for complete release
  trigger-comprehensive-release:
    name: Trigger Comprehensive Release
    runs-on: ubuntu-latest
    needs: [validate-release]
    if: needs.validate-release.outputs.should-release == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Trigger comprehensive report workflow
      uses: actions/github-script@v7
      timeout-minutes: 5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const version = '${{ needs.validate-release.outputs.version-number }}';
          
          console.log('🚀 Triggering comprehensive report workflow for release');
          console.log(`📦 Version: ${version}`);
          
          try {
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'comprehensive-report.yml',
              ref: 'main',
              inputs: {
                report_type: 'comprehensive',
                version_test: version,
                include_detailed_analysis: 'true',
                generate_html: 'true',
                create_github_release: 'true'
              }
            });
            
            console.log('✅ Comprehensive report workflow triggered successfully');
            console.log('🎯 This will create a complete release with:');
            console.log('  • Comprehensive dashboard and reports');
            console.log('  • Multi-platform build artifacts');
            console.log('  • Complete CI validation data');
            console.log('  • GitHub release with all assets');
            
          } catch (error) {
            console.error('❌ Failed to trigger comprehensive report workflow:', error);
            throw error;
          }
          
    - name: Create release summary
      shell: pwsh
      run: |
        Write-Host "🎉 RELEASE PIPELINE INITIATED!" -ForegroundColor Green -BackgroundColor Black
        Write-Host "===============================" -ForegroundColor Green
        Write-Host "📦 Version: v${{ needs.validate-release.outputs.version-number }}" -ForegroundColor Cyan
        Write-Host "🔄 Comprehensive report workflow triggered" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "🎯 The comprehensive release will include:" -ForegroundColor Yellow
        Write-Host "  ✅ Multi-platform packages (Windows, Linux, macOS)" -ForegroundColor Green
        Write-Host "  ✅ Comprehensive dashboard with health metrics" -ForegroundColor Green
        Write-Host "  ✅ Complete CI validation data" -ForegroundColor Green
        Write-Host "  ✅ GitHub release with all assets" -ForegroundColor Green
        Write-Host ""
        Write-Host "⏳ Monitor the comprehensive report workflow for completion" -ForegroundColor Cyan
        Write-Host "🔗 Release will be available at: https://github.com/${{ github.repository }}/releases/tag/v${{ needs.validate-release.outputs.version-number }}" -ForegroundColor Cyan