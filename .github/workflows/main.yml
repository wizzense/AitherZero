name: CI/CD

on:
  push:
    branches: [main, develop, 'feature/**']
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      playbook:
        description: 'Playbook to run'
        type: choice
        options: 
          - 'auto'
          - 'github-cicd'
          - 'test-quick'
          - 'test-full'
          - 'test-ci'
        default: 'auto'
      profile:
        description: 'Playbook profile'
        type: choice
        options:
          - 'auto'
          - 'quick'
          - 'full'
          - 'pr'
        default: 'auto'

# Prevent duplicate workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  AITHERZERO_CI: true
  AITHERZERO_NONINTERACTIVE: true

jobs:
  pipeline:
    name: Pipeline - ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: ${{ github.event_name == 'pull_request' }}
      matrix:
        include:
          - os: ubuntu-latest
            name: Ubuntu-Latest
          - os: windows-2022
            name: Windows-Server-2022
          - os: windows-latest
            name: Windows-Server-2025
          - os: macos-latest
            name: macOS-Latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
    
    - name: Bootstrap
      shell: pwsh
      run: |
        chmod +x *.ps1 *.sh 2>/dev/null || true
        pwsh ./bootstrap.ps1 -Mode New -NonInteractive
    
    - name: Syntax Validation
      shell: pwsh
      run: |
        Write-Host "Running syntax validation..." -ForegroundColor Cyan
        pwsh ./automation-scripts/0407_Validate-Syntax.ps1 -FilePath "./Start-AitherZero.ps1"
        
        # Validate key automation scripts
        $scripts = @(
          "./automation-scripts/0402_Run-UnitTests.ps1",
          "./automation-scripts/0404_Run-PSScriptAnalyzer.ps1",
          "./automation-scripts/0407_Validate-Syntax.ps1"
        )
        foreach ($script in $scripts) {
          if (Test-Path $script) {
            pwsh ./automation-scripts/0407_Validate-Syntax.ps1 -FilePath $script
          }
        }
    
    - name: Run PSScriptAnalyzer
      shell: pwsh
      run: |
        Write-Host "Running PSScriptAnalyzer..." -ForegroundColor Cyan
        pwsh ./automation-scripts/0404_Run-PSScriptAnalyzer.ps1
    
    - name: Run Unit Tests
      shell: pwsh
      run: |
        Write-Host "Running unit tests..." -ForegroundColor Cyan
        pwsh ./automation-scripts/0402_Run-UnitTests.ps1 -CI
    
    - name: Upload Results
      if: always() && !cancelled()
      uses: actions/upload-artifact@v4
      with:
        name: pipeline-${{ matrix.name }}-${{ github.run_number }}
        path: |
          test-results/
          tests/reports/
          logs/transcript-*.log
        retention-days: 30
    
    - name: PR Updates
      if: github.event_name == 'pull_request' && matrix.os == 'ubuntu-latest'
      shell: pwsh
      run: |
        # Create simple test report for PR
        Write-Host "Creating test summary for PR..." -ForegroundColor Cyan
        if (Test-Path "./tests/results/") {
          $testFiles = Get-ChildItem -Path "./tests/results/" -Filter "*.xml" -ErrorAction SilentlyContinue
          if ($testFiles) {
            Write-Host "Found test results: $($testFiles.Count) files"
          }
        }