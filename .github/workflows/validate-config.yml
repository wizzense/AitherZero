---
name: 'Validate Config Manifest'

on:
  push:
    # Only run on base branches to avoid duplicate runs with pull_request events
    branches: [main, develop]
    paths:
      - 'config.psd1'
      - 'automation-scripts/0003_Sync-ConfigManifest.ps1'
      - 'automation-scripts/0413_Validate-ConfigManifest.ps1'
      - 'domains/**/*.psm1'
      - 'automation-scripts/*.ps1'
  pull_request:
    paths:
      - 'config.psd1'
      - 'automation-scripts/0003_Sync-ConfigManifest.ps1'
      - 'automation-scripts/0413_Validate-ConfigManifest.ps1'
      - 'domains/**/*.psm1'
      - 'automation-scripts/*.ps1'
  workflow_dispatch:

jobs:
  validate-config:
    name: 'Validate Config.psd1'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Setup PowerShell'
        shell: pwsh
        run: |
          Write-Host "PowerShell $($PSVersionTable.PSVersion) ready" -ForegroundColor Cyan

          # Install PSScriptAnalyzer if not available
          if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
            Write-Host "Installing PSScriptAnalyzer..." -ForegroundColor Yellow
            Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser -AllowClobber
          }

      - name: 'Validate Config Manifest'
        shell: pwsh
        run: |
          Write-Host "üîç Validating config.psd1 manifest..." -ForegroundColor Cyan
          Write-Host ""

          # Run the validation script
          & ./automation-scripts/0413_Validate-ConfigManifest.ps1
          $exitCode = $LASTEXITCODE

          Write-Host ""
          if ($exitCode -ne 0) {
            Write-Host "‚ùå Config manifest validation failed!" -ForegroundColor Red
            Write-Host ""
            Write-Host "Common issues:" -ForegroundColor Yellow
            Write-Host "  ‚Ä¢ Domain/module counts don't match actual repository state" -ForegroundColor Yellow
            Write-Host "  ‚Ä¢ Script inventory counts are outdated" -ForegroundColor Yellow
            Write-Host "  ‚Ä¢ Script references point to non-existent files" -ForegroundColor Yellow
            Write-Host "  ‚Ä¢ Missing required sections or subsections" -ForegroundColor Yellow
            Write-Host ""
            Write-Host "To fix:" -ForegroundColor Cyan
            Write-Host "  1. Run: pwsh -File ./automation-scripts/0413_Validate-ConfigManifest.ps1" -ForegroundColor White
            Write-Host "  2. Update config.psd1 based on the validation output" -ForegroundColor White
            Write-Host "  3. Commit the changes" -ForegroundColor White
            exit 1
          } else {
            Write-Host "‚úÖ Config manifest is valid and synchronized!" -ForegroundColor Green
          }

      - name: 'Sync Config with Automation Scripts'
        shell: pwsh
        run: |
          Write-Host "üîÑ Checking config.psd1 synchronization with automation scripts..." -ForegroundColor Cyan
          Write-Host ""

          # Run the sync check script
          & ./automation-scripts/0003_Sync-ConfigManifest.ps1
          $exitCode = $LASTEXITCODE

          Write-Host ""
          if ($exitCode -ne 0) {
            Write-Host "‚ùå Config is out of sync with automation scripts!" -ForegroundColor Red
            Write-Host ""
            Write-Host "To fix:" -ForegroundColor Cyan
            Write-Host "  1. Run: pwsh -File ./automation-scripts/0003_Sync-ConfigManifest.ps1" -ForegroundColor White
            Write-Host "  2. Review the missing scripts listed above" -ForegroundColor White
            Write-Host "  3. Add script numbers to appropriate sections in config.psd1" -ForegroundColor White
            Write-Host "  4. Commit the changes" -ForegroundColor White
            exit 1
          } else {
            Write-Host "‚úÖ Config is synchronized with all automation scripts!" -ForegroundColor Green
          }

      - name: 'Summary'
        if: always()
        shell: pwsh
        run: |
          if ($env:GITHUB_STEP_SUMMARY) {
            $status = "${{ job.status }}"
            $summary = @"
          ## Config Manifest Validation Results

          The config.psd1 manifest has been validated for:
          - ‚úÖ Syntax correctness
          - ‚úÖ Required structure
          - ‚úÖ Domain/module count accuracy
          - ‚úÖ Script inventory accuracy
          - ‚úÖ Script reference validity
          - ‚úÖ Synchronization with automation scripts
          - ‚úÖ PSScriptAnalyzer compliance

          **Status**: $status

          ### What This Checks

          1. **Config Validation (0413)**: Validates structure, counts, and references
          2. **Config Sync (0003)**: Ensures all automation scripts are registered in config.psd1

          If validation fails, run the sync script locally to identify missing scripts:
          ```powershell
          ./automation-scripts/0003_Sync-ConfigManifest.ps1
          ```
          "@

            $summary | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8
          }
