{
  "name": "test-ci",
  "description": "Continuous Integration test suite optimized for CI/CD pipelines",
  "version": "1.0.0",
  "author": "AitherZero CI/CD",
  "tags": ["testing", "ci", "automation", "pipeline"],
  "requirements": {
    "modules": ["Pester", "PSScriptAnalyzer"],
    "minimumVersion": "7.0",
    "estimatedDuration": "10-15 minutes",
    "platforms": ["Windows", "Linux", "macOS"]
  },
  "variables": {
    "testPath": "./tests",
    "outputPath": "./tests/results",
    "artifactsPath": "./artifacts",
    "minimumCoverage": 70,
    "failFast": true,
    "generateArtifacts": true,
    "ciMode": true,
    "timeout": 600
  },
  "environment": {
    "CI": "true",
    "AITHERZERO_TEST_MODE": "CI",
    "AITHERZERO_NO_INTERACTIVE": "true",
    "AITHERZERO_LOG_LEVEL": "Information"
  },
  "stages": [
    {
      "name": "CI Environment Info",
      "description": "Log CI environment details",
      "sequence": [],
      "preScript": "Write-Host \"CI Environment: $($env:GITHUB_ACTIONS ? 'GitHub Actions' : $env:AZURE_PIPELINES ? 'Azure Pipelines' : 'Unknown')\"; Write-Host \"OS: $($PSVersionTable.OS)\"; Write-Host \"PowerShell: $($PSVersionTable.PSVersion)\"",
      "timeout": 30
    },
    {
      "name": "Install Dependencies",
      "description": "Ensure testing tools are available",
      "sequence": ["0400"],
      "variables": {
        "Force": false,
        "Timeout": 300
      },
      "continueOnError": false,
      "timeout": 300
    },
    {
      "name": "Syntax Validation",
      "description": "Fast syntax check as gate",
      "sequence": ["0405"],
      "variables": {
        "CheckSyntax": true,
        "CheckParameters": false,
        "CheckCommands": false,
        "CheckModuleDependencies": false
      },
      "continueOnError": false,
      "failFast": true,
      "timeout": 120
    },
    {
      "name": "Unit Tests",
      "description": "Run unit tests with coverage",
      "sequence": ["0402"],
      "variables": {
        "NoCoverage": true,
        "OutputPath": "./artifacts/test-results",
        "TestScope": "Unit",
        "QuickTest": true
      },
      "continueOnError": false,
      "timeout": 300
    },
    {
      "name": "Static Analysis",
      "description": "PSScriptAnalyzer with CI rules",
      "sequence": ["0404"],
      "variables": {
        "OutputPath": "./artifacts/analysis",
        "ExcludePaths": ["tests", "legacy-to-migrate", "examples", ".github"],
        "Severity": ["Error", "Warning"],
        "Quick": true
      },
      "continueOnError": true,
      "timeout": 180
    }
  ],
  "artifacts": {
    "paths": [
      "./artifacts/test-results/*.xml",
      "./artifacts/analysis/*",
      "./tests/results/*-Summary.json"
    ],
    "retentionDays": 30,
    "compress": true
  },
  "reporting": {
    "enabled": true,
    "formats": ["JUnit", "SARIF"],
    "publishTestResults": true,
    "publishCodeCoverage": false,
    "commentOnPR": true
  },
  "qualityGates": {
    "enabled": true,
    "rules": [
      {
        "name": "No Test Failures",
        "type": "tests",
        "condition": "Failed == 0",
        "failBuild": true
      },
      {
        "name": "No PSScriptAnalyzer Errors",
        "type": "analysis",
        "severity": "Error",
        "threshold": 0,
        "failBuild": true
      }
    ]
  },
  "notifications": {
    "channels": ["console", "file"],
    "onStart": {
      "message": "üöÄ Starting CI test suite for AitherZero",
      "includeEnvironment": true
    },
    "onSuccess": {
      "message": "‚úÖ CI tests passed! Build is ready.",
      "includeMetrics": true,
      "includeDuration": true
    },
    "onFailure": {
      "message": "‚ùå CI tests failed. Check the logs for details.",
      "includeFailures": true,
      "includeArtifactLinks": true
    }
  },
  "integrations": {
    "github": {
      "enabled": true,
      "checkRuns": true,
      "statusChecks": ["tests", "analysis"],
      "prComments": true
    }
  },
  "postActions": [
    {
      "description": "Create test summary",
      "type": "script",
      "inline": "@{Status = if ((Get-ChildItem './artifacts/test-results/*.xml' -ErrorAction SilentlyContinue | Select-String '<failure' -ErrorAction SilentlyContinue).Count -eq 0) {'Passed'} else {'Failed'}; Timestamp = Get-Date; Duration = [System.Diagnostics.Stopwatch]::StartNew()} | ConvertTo-Json | Set-Content './artifacts/ci-summary.json'"
    },
    {
      "description": "Set CI output variables",
      "type": "conditional",
      "condition": "$env:GITHUB_ACTIONS -eq 'true'",
      "action": {
        "type": "script",
        "inline": "if (Test-Path './artifacts/test-results/*.xml') { $testCount = (Select-Xml -Path './artifacts/test-results/*.xml' -XPath '//testcase').Count; Write-Host \"::set-output name=tests-run::$testCount\" }"
      }
    }
  ],
  "profiles": {
    "quick": {
      "description": "Minimal testing for quick feedback",
      "variables": {
        "TestScope": "Smoke",
        "SkipIntegration": true,
        "QuickAnalysis": true
      }
    },
    "pr": {
      "description": "PR validation pipeline",
      "variables": {
        "TestScope": "Unit",
        "PostPRComment": true,
        "FailFast": true
      }
    },
    "full": {
      "description": "Full CI test suite",
      "stages": [
        "Install Dependencies",
        "Syntax Validation", 
        "Unit Tests",
        "Integration Tests",
        "Static Analysis",
        "Coverage Report"
      ],
      "variables": {
        "TestScope": "All",
        "Coverage": true,
        "GenerateReports": true
      }
    }
  }
}