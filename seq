#!/usr/bin/env pwsh
# AitherZero Sequence CLI wrapper

# Capture command-line arguments
$arguments = $args

# Determine the actual directory of this script
$scriptDir = $null

# Try different methods to get the script directory
if ($PSScriptRoot) {
    $scriptDir = $PSScriptRoot
} elseif ($MyInvocation.MyCommand.Path) {
    $scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
} else {
    # When run as ./seq, we're already in the right directory
    $scriptDir = Get-Location
}

# Verify we found the AitherZero root
if (-not (Test-Path "$scriptDir/AitherZero.psd1")) {
    if (Test-Path "./AitherZero.psd1") {
        $scriptDir = Get-Location
    } else {
        Write-Error "Cannot find AitherZero.psd1. Please run from the AitherZero directory."
        exit 1
    }
}

# Load module if needed (check both env var and function availability)
if (-not $env:AITHERZERO_INITIALIZED -or -not (Get-Command Invoke-OrchestrationSequence -ErrorAction SilentlyContinue)) {
    Import-Module "$scriptDir/AitherZero.psd1" -Force -Global
}

# Double-check we have the function available
if (-not (Get-Command Invoke-OrchestrationSequence -ErrorAction SilentlyContinue)) {
    Write-Error "Invoke-OrchestrationSequence command not found. Module may not have loaded correctly."
    exit 1
}

# Now run the requested sequence
if ($arguments.Count -eq 0) {
    Write-Host "Usage: seq <sequence-pattern> [arguments]" -ForegroundColor Yellow
    Write-Host "Examples:" -ForegroundColor Gray
    Write-Host "  seq 0402,0404,0407   # Run specific scripts" -ForegroundColor White
    Write-Host "  seq 0400-0409        # Run range of scripts" -ForegroundColor White
    Write-Host "  seq 0000-0099        # Run all environment prep" -ForegroundColor White
    exit 1
}

# Parse the sequence pattern
$sequence = [string]$arguments[0]
$additionalParams = @{}

if ($arguments.Count -gt 1) {
    # Parse remaining arguments as parameters
    for ($i = 1; $i -lt $arguments.Count; $i++) {
        $arg = $arguments[$i]
        if ($arg -match '^-(\w+)$') {
            $paramName = $Matches[1]
            if ($i + 1 -lt $arguments.Count -and $arguments[$i + 1] -notmatch '^-') {
                $additionalParams[$paramName] = $arguments[$i + 1]
                $i++
            } else {
                $additionalParams[$paramName] = $true
            }
        }
    }
}

# Invoke the sequence
Invoke-OrchestrationSequence -Sequence $sequence @additionalParams