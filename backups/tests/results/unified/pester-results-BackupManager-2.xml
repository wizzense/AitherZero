<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="57" errors="0" failures="8" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-07-09" time="15:19:45">
  <environment nunit-version="2.5.8.0" user-domain="" clr-version="9.0.4" user="codespace" platform="Linux" cwd="/workspaces/AitherZero" machine-name="codespaces-6c6eb1" os-version="6.8.0-1027-azure" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="65.4344" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1" executed="True" result="Failure" success="False" time="65.4344" asserts="0" description="/workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="BackupManager Module Structure" executed="True" result="Success" success="True" time="0.2365" asserts="0" description="BackupManager Module Structure">
            <results>
              <test-suite type="TestFixture" name="BackupManager Module Structure.Module Loading and Structure" executed="True" result="Success" success="True" time="0.2225" asserts="0" description="BackupManager Module Structure.Module Loading and Structure">
                <results>
                  <test-case description="Should import successfully" name="BackupManager Module Structure.Module Loading and Structure.Should import successfully" time="0.1395" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export all expected functions" name="BackupManager Module Structure.Module Loading and Structure.Should export all expected functions" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have proper module manifest" name="BackupManager Module Structure.Module Loading and Structure.Should have proper module manifest" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-BackupStatistics" executed="True" result="Success" success="True" time="0.4722" asserts="0" description="Get-BackupStatistics">
            <results>
              <test-suite type="TestFixture" name="Get-BackupStatistics.Basic Statistics Functionality" executed="True" result="Success" success="True" time="0.2312" asserts="0" description="Get-BackupStatistics.Basic Statistics Functionality">
                <results>
                  <test-case description="Should analyze backup files without errors" name="Get-BackupStatistics.Basic Statistics Functionality.Should analyze backup files without errors" time="0.0719" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper statistics structure" name="Get-BackupStatistics.Basic Statistics Functionality.Should return proper statistics structure" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should include details when requested" name="Get-BackupStatistics.Basic Statistics Functionality.Should include details when requested" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle empty directories gracefully" name="Get-BackupStatistics.Basic Statistics Functionality.Should handle empty directories gracefully" time="0.056" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-BackupConsolidation" executed="True" result="Failure" success="False" time="0.8675" asserts="0" description="Invoke-BackupConsolidation">
            <results>
              <test-suite type="TestFixture" name="Invoke-BackupConsolidation.Basic Consolidation Functionality" executed="True" result="Failure" success="False" time="0.3277" asserts="0" description="Invoke-BackupConsolidation.Basic Consolidation Functionality">
                <results>
                  <test-case description="Should consolidate backup files without errors" name="Invoke-BackupConsolidation.Basic Consolidation Functionality.Should consolidate backup files without errors" time="0.0982" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper consolidation results" name="Invoke-BackupConsolidation.Basic Consolidation Functionality.Should return proper consolidation results" time="0.0625" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should create backup directory structure" name="Invoke-BackupConsolidation.Basic Consolidation Functionality.Should create backup directory structure" time="0.1141" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected path '/tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/backup-destination/structure-test' to exist, but it did not exist.</message>
                      <stack-trace>at $consolidationPath | Should -Exist, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:165
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:165</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should handle exclusions properly" name="Invoke-BackupConsolidation.Basic Consolidation Functionality.Should handle exclusions properly" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BackupConsolidation.WhatIf Functionality" executed="True" result="Success" success="True" time="0.3916" asserts="0" description="Invoke-BackupConsolidation.WhatIf Functionality">
                <results>
                  <test-case description="Should support WhatIf parameter" name="Invoke-BackupConsolidation.WhatIf Functionality.Should support WhatIf parameter" time="0.0595" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-BackupExclusion" executed="True" result="Failure" success="False" time="1.0059" asserts="0" description="New-BackupExclusion">
            <results>
              <test-suite type="TestFixture" name="New-BackupExclusion.Exclusion Rules Creation" executed="True" result="Failure" success="False" time="0.1337" asserts="0" description="New-BackupExclusion.Exclusion Rules Creation">
                <results>
                  <test-case description="Should create exclusion rules without errors" name="New-BackupExclusion.Exclusion Rules Creation.Should create exclusion rules without errors" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper exclusion results" name="New-BackupExclusion.Exclusion Rules Creation.Should return proper exclusion results" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle custom patterns" name="New-BackupExclusion.Exclusion Rules Creation.Should handle custom patterns" time="0.0384" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $null.</message>
                      <stack-trace>at $result.Success | Should -Not -BeFalse, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:203
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:203</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support WhatIf parameter" name="New-BackupExclusion.Exclusion Rules Creation.Should support WhatIf parameter" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-PermanentCleanup" executed="True" result="Failure" success="False" time="4.1563" asserts="0" description="Invoke-PermanentCleanup">
            <results>
              <test-suite type="TestFixture" name="Invoke-PermanentCleanup.Basic Cleanup Functionality" executed="True" result="Failure" success="False" time="3.1463" asserts="0" description="Invoke-PermanentCleanup.Basic Cleanup Functionality">
                <results>
                  <test-case description="Should identify problematic files" name="Invoke-PermanentCleanup.Basic Cleanup Functionality.Should identify problematic files" time="1.7649" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle backup cleanup mode" name="Invoke-PermanentCleanup.Basic Cleanup Functionality.Should handle backup cleanup mode" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support prevention rules creation" name="Invoke-PermanentCleanup.Basic Cleanup Functionality.Should support prevention rules creation" time="1.3408" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $null.</message>
                      <stack-trace>at $result.PreventionRulesCreated | Should -Be $true, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:255
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:255</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-BackupMaintenance" executed="True" result="Success" success="True" time="60.9459" asserts="0" description="Invoke-BackupMaintenance">
            <results>
              <test-suite type="TestFixture" name="Invoke-BackupMaintenance.Maintenance Mode Operations" executed="True" result="Success" success="True" time="39.8912" asserts="0" description="Invoke-BackupMaintenance.Maintenance Mode Operations">
                <results>
                  <test-case description="Should run Quick maintenance mode" name="Invoke-BackupMaintenance.Maintenance Mode Operations.Should run Quick maintenance mode" time="17.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should run Statistics mode" name="Invoke-BackupMaintenance.Maintenance Mode Operations.Should run Statistics mode" time="2.6269" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper maintenance results" name="Invoke-BackupMaintenance.Maintenance Mode Operations.Should return proper maintenance results" time="15.3857" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support different output formats" name="Invoke-BackupMaintenance.Maintenance Mode Operations.Should support different output formats" time="4.8713" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BackupMaintenance.AutoFix Functionality" executed="True" result="Success" success="True" time="56.7869" asserts="0" description="Invoke-BackupMaintenance.AutoFix Functionality">
                <results>
                  <test-case description="Should support AutoFix parameter" name="Invoke-BackupMaintenance.AutoFix Functionality.Should support AutoFix parameter" time="16.8932" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-AdvancedBackup" executed="True" result="Failure" success="False" time="62.1797" asserts="0" description="Invoke-AdvancedBackup">
            <results>
              <test-suite type="TestFixture" name="Invoke-AdvancedBackup.Advanced Backup Features" executed="True" result="Failure" success="False" time="1.0561" asserts="0" description="Invoke-AdvancedBackup.Advanced Backup Features">
                <results>
                  <test-case description="Should perform basic advanced backup" name="Invoke-AdvancedBackup.Advanced Backup Features.Should perform basic advanced backup" time="0.2054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper backup context" name="Invoke-AdvancedBackup.Advanced Backup Features.Should return proper backup context" time="0.1667" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected /tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/backup-test-data, but got '/tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/backup-test-data'.</message>
                      <stack-trace>at $result.SourcePath | Should -Be (Resolve-Path $script:TestDataPath), /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:312
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:312</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support compression levels" name="Invoke-AdvancedBackup.Advanced Backup Features.Should support compression levels" time="0.1659" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support encryption (basic test)" name="Invoke-AdvancedBackup.Advanced Backup Features.Should support encryption (basic test)" time="0.1805" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support deduplication" name="Invoke-AdvancedBackup.Advanced Backup Features.Should support deduplication" time="0.1705" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should create metadata directory" name="Invoke-AdvancedBackup.Advanced Backup Features.Should create metadata directory" time="0.146" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-AdvancedBackup.WhatIf Support" executed="True" result="Success" success="True" time="1.2318" asserts="0" description="Invoke-AdvancedBackup.WhatIf Support">
                <results>
                  <test-case description="Should support WhatIf parameter" name="Invoke-AdvancedBackup.WhatIf Support.Should support WhatIf parameter" time="0.1721" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Restore-BackupData" executed="True" result="Failure" success="False" time="63.2041" asserts="0" description="Restore-BackupData">
            <results>
              <test-suite type="TestFixture" name="Restore-BackupData.Basic Restoration Functionality" executed="True" result="Failure" success="False" time="0.8187" asserts="0" description="Restore-BackupData.Basic Restoration Functionality">
                <results>
                  <test-case description="Should restore backup without errors" name="Restore-BackupData.Basic Restoration Functionality.Should restore backup without errors" time="0.1972" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper restoration context" name="Restore-BackupData.Basic Restoration Functionality.Should return proper restoration context" time="0.2246" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected /tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/restore-destination/context-restore, but got '/tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/restore-destination/context-restore'.</message>
                      <stack-trace>at $result.RestorePath | Should -Be (Resolve-Path $restorePath), /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:378
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:378</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support selective restore" name="Restore-BackupData.Basic Restoration Functionality.Should support selective restore" time="0.1876" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support verification" name="Restore-BackupData.Basic Restoration Functionality.Should support verification" time="0.1929" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Restore-BackupData.WhatIf Support" executed="True" result="Failure" success="False" time="1.021" asserts="0" description="Restore-BackupData.WhatIf Support">
                <results>
                  <test-case description="Should support WhatIf parameter" name="Restore-BackupData.WhatIf Support.Should support WhatIf parameter" time="0.1952" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot find path '/tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/restore-destination/whatif-restore' because it does not exist." was thrown from /workspaces/AitherZero/aither-core/modules/BackupManager/Public/Restore-BackupData.ps1:82 char:24
    +         $RestorePath = Resolve-Path $RestorePath
    +                        ~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Restore-BackupData -BackupPath $script:SourceBackupPath -RestorePath $restorePath -Force -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:405
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:405</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Start-AutomatedBackup" executed="True" result="Failure" success="False" time="63.4379" asserts="0" description="Start-AutomatedBackup">
            <results>
              <test-suite type="TestFixture" name="Start-AutomatedBackup.Automation Configuration" executed="True" result="Success" success="True" time="0.1997" asserts="0" description="Start-AutomatedBackup.Automation Configuration">
                <results>
                  <test-case description="Should configure automated backup without errors" name="Start-AutomatedBackup.Automation Configuration.Should configure automated backup without errors" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return proper automation status" name="Start-AutomatedBackup.Automation Configuration.Should return proper automation status" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support different schedules" name="Start-AutomatedBackup.Automation Configuration.Should support different schedules" time="0.0636" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should create automation directory structure" name="Start-AutomatedBackup.Automation Configuration.Should create automation directory structure" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support monitoring enablement" name="Start-AutomatedBackup.Automation Configuration.Should support monitoring enablement" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support encryption enablement" name="Start-AutomatedBackup.Automation Configuration.Should support encryption enablement" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Start-AutomatedBackup.WhatIf Support" executed="True" result="Failure" success="False" time="0.2305" asserts="0" description="Start-AutomatedBackup.WhatIf Support">
                <results>
                  <test-case description="Should support WhatIf parameter" name="Start-AutomatedBackup.WhatIf Support.Should support WhatIf parameter" time="0.0287" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot find path '/tmp/978e9058-282f-45be-9b9e-c89d4c2ac81b/backup-destination/automated-whatif' because it does not exist." was thrown from /workspaces/AitherZero/aither-core/modules/BackupManager/Public/Start-AutomatedBackup.ps1:116 char:23
    +         $BackupPath = Resolve-Path $BackupPath
    +                       ~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Start-AutomatedBackup -SourcePaths @($script:TestDataPath) -BackupPath $automatedBackupPath -Force -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:470
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:470</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Error Handling and Edge Cases" executed="True" result="Failure" success="False" time="63.703" asserts="0" description="Error Handling and Edge Cases">
            <results>
              <test-suite type="TestFixture" name="Error Handling and Edge Cases.Invalid Parameters" executed="True" result="Failure" success="False" time="0.0912" asserts="0" description="Error Handling and Edge Cases.Invalid Parameters">
                <results>
                  <test-case description="Should handle non-existent source paths gracefully" name="Error Handling and Edge Cases.Invalid Parameters.Should handle non-existent source paths gracefully" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle invalid backup paths gracefully" name="Error Handling and Edge Cases.Invalid Parameters.Should handle invalid backup paths gracefully" time="0.0624" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected an exception to be thrown, but no exception was thrown.</message>
                      <stack-trace>at { Invoke-BackupConsolidation -SourcePath $script:TestDataPath -BackupPath "/invalid/path/that/does/not/exist" -Force } | Should -Throw, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:484
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/BackupManager/tests/BackupManager.Tests.ps1:484</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should handle missing backup metadata gracefully" name="Error Handling and Edge Cases.Invalid Parameters.Should handle missing backup metadata gracefully" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Error Handling and Edge Cases.Resource Constraints" executed="True" result="Success" success="True" time="0.2631" asserts="0" description="Error Handling and Edge Cases.Resource Constraints">
                <results>
                  <test-case description="Should handle read-only directories appropriately" name="Error Handling and Edge Cases.Resource Constraints.Should handle read-only directories appropriately" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle large file operations" name="Error Handling and Edge Cases.Resource Constraints.Should handle large file operations" time="0.1534" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Cross-Platform Compatibility" executed="True" result="Success" success="True" time="63.7922" asserts="0" description="Cross-Platform Compatibility">
            <results>
              <test-suite type="TestFixture" name="Cross-Platform Compatibility.Path Handling" executed="True" result="Success" success="True" time="0.0656" asserts="0" description="Cross-Platform Compatibility.Path Handling">
                <results>
                  <test-case description="Should handle cross-platform paths correctly" name="Cross-Platform Compatibility.Path Handling.Should handle cross-platform paths correctly" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle different path separators" name="Cross-Platform Compatibility.Path Handling.Should handle different path separators" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Cross-Platform Compatibility.Platform-Specific Features" executed="True" result="Success" success="True" time="0.0859" asserts="0" description="Cross-Platform Compatibility.Platform-Specific Features">
                <results>
                  <test-case description="Should handle platform differences gracefully" name="Cross-Platform Compatibility.Platform-Specific Features.Should handle platform differences gracefully" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Performance and Concurrency" executed="True" result="Success" success="True" time="64.1299" asserts="0" description="Performance and Concurrency">
            <results>
              <test-suite type="TestFixture" name="Performance and Concurrency.Performance Characteristics" executed="True" result="Success" success="True" time="0.3357" asserts="0" description="Performance and Concurrency.Performance Characteristics">
                <results>
                  <test-case description="Should complete backup operations within reasonable time" name="Performance and Concurrency.Performance Characteristics.Should complete backup operations within reasonable time" time="0.1577" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle concurrent operations" name="Performance and Concurrency.Performance Characteristics.Should handle concurrent operations" time="0.1516" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Integration with Other Modules" executed="True" result="Success" success="True" time="64.1705" asserts="0" description="Integration with Other Modules">
            <results>
              <test-suite type="TestFixture" name="Integration with Other Modules.Logging Integration" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Integration with Other Modules.Logging Integration">
                <results>
                  <test-case description="Should integrate with logging system" name="Integration with Other Modules.Logging Integration.Should integrate with logging system" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Integration with Other Modules.Project Root Detection" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Integration with Other Modules.Project Root Detection">
                <results>
                  <test-case description="Should detect project root correctly" name="Integration with Other Modules.Project Root Detection.Should detect project root correctly" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Module Configuration and Customization" executed="True" result="Success" success="True" time="64.8385" asserts="0" description="Module Configuration and Customization">
            <results>
              <test-suite type="TestFixture" name="Module Configuration and Customization.Configuration Handling" executed="True" result="Success" success="True" time="0.6657" asserts="0" description="Module Configuration and Customization.Configuration Handling">
                <results>
                  <test-case description="Should handle custom patterns correctly" name="Module Configuration and Customization.Configuration Handling.Should handle custom patterns correctly" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should support different compression levels" name="Module Configuration and Customization.Configuration Handling.Should support different compression levels" time="0.6396" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>