{
  "permissions": {
    "allow": [
      "Bash(pwsh:*)",
      "Bash(rg:*)",
      "Bash(awk:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(mkdir:*)",
      "Bash(git mv:*)",
      "Bash(./tests/Run-BulletproofValidation.ps1 -ValidationLevel Quick)",
      "Bash(git add:*)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" --version)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" status)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" run list --limit 5)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" run view 15958261104)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" run list --limit 3)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" push)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" workflow run \"ðŸ“¦ Build & Release Pipeline\" --field create_release=false --field release_type=patch)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" release list --limit 20)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" release delete v1.0.9 v1.0.8 v1.0.7 v1.0.6 v1.0.5 --yes)",
      "Bash(rm:*)",
      "Bash(/mnt/c/Program\\ Files/Git/cmd/git.exe grep -n \"## Important Notes\" /mnt/c/Users/alexa/OneDrive/Documents/0.\\ wizzense/AitherZero/CLAUDE.md)",
      "Bash(/mnt/c/Program Files/Git/cmd/git.exe log --oneline main ^origin/main)",
      "Bash(/mnt/c/Program Files/Git/cmd/git.exe log --oneline -1 origin/main)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -Command \"Set-Location 'C:\\Users\\alexa\\OneDrive\\Documents\\0. wizzense\\AitherZero'; Import-Module ./aither-core/modules/PatchManager -Force; Sync-GitBranch -Force\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -NoProfile -File ./fix-quickstart.ps1)",
      "Bash(true)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" .claude/scripts/patchmanager.ps1 consolidate --strategy Compatible --max-prs 3)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" pull --rebase)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" run list --workflow=\"ðŸ“¦ Build & Release Pipeline\" --limit 1)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" run view 15981554277)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" commit -m \"Release v1.2.8 - Working build pipeline\n\n- Fixed package path validation for custom build script\n- Custom packages are in build-output/{platform}/ directory\n- Quick-release script included for future releases\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" push origin main)",
      "Bash(\"/mnt/c/Program Files/GitHub CLI/gh.exe\" run list --workflow='ðŸ§  Intelligent CI/CD Pipeline' --limit 5)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -Command \"Import-Module ./aither-core/modules/PatchManager -Force; Invoke-ReleaseWorkflow -ReleaseType ''patch'' -Description ''Fix workflow dependencies and release automation''\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -Command \"Import-Module ./aither-core/modules/PatchManager -Force; Invoke-PatchWorkflow -PatchDescription ''Fix YAML syntax errors and merge conflicts in workflow'' -PatchOperation { Write-Host ''Syntax errors fixed'' } -CreatePR\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -Command \"Import-Module ./aither-core/modules/PatchManager -Force; Get-Command New-Feature\")",
      "Bash('/mnt/c/Program Files/PowerShell/7/pwsh.exe' -ExecutionPolicy Bypass -File './Create-EmergencyPatch-v1.4.1.ps1')",
      "Bash('/mnt/c/Program Files/Git/cmd/git.exe' tag -a v1.4.1 -m \"Emergency Patch Release v1.4.1\n\nCRITICAL FIXES for startup failures:\nâœ… Fixed module dependency issues (Logging v2.0.0 GUID)\nâœ… Fixed PSCustomObject to Hashtable conversion error  \nâœ… Made ActiveDirectory dependency optional\nâœ… Fixed LicenseManager dependency resolution\nâœ… Ensured proper module loading order\n\nThis emergency patch resolves all critical issues from v1.4.0 that \nprevented AitherZero from starting properly.\n\nEmergency release created with PatchManager v3.0 and manual fallback.\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -Command \"\n# Import PatchManager module\nImport-Module ''/mnt/c/Users/alexa/OneDrive/Documents/0. wizzense/AitherZero/aither-core/modules/PatchManager'' -Force\n\n# Use Invoke-ReleaseWorkflow to handle everything\nInvoke-ReleaseWorkflow -Version ''1.4.2'' -Description ''Enhanced menu system with comprehensive improvements including multi-column layout, 4-digit prefix support, script name execution, and comma-separated batch execution'' -Verbose\n\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -c \"./Start-AitherZero.ps1 -WhatIf\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -c \"gh release create v0.5-beta --title ''AitherZero v0.5-beta - Fresh Start Release'' --notes-file ''./release-notes-v0.5-beta.md'' --prerelease\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -c \"git tag && echo ''---'' && gh release list\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -c \"gh workflow list\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -c \"gh workflow run ''ðŸ“¦ Build & Release Pipeline''\")",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" -c \"gh run view 16032364263\")",
      "Bash(powershell:*)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" add aither-core/modules/PatchManager test-git-detection.ps1)",
      "Bash(/mnt/c/Program Files/PowerShell/7/pwsh.exe ./test-patchmanager.ps1)",
      "Bash(\"/mnt/c/Program Files/Git/cmd/git.exe\" branch -a)",
      "Bash(/mnt/c/Program Files/PowerShell/7/pwsh.exe -Command \"\nImport-Module ./aither-core/modules/PatchManager -Force\n$currentBranch = & ''/mnt/c/Program Files/Git/cmd/git.exe'' branch --show-current\nWrite-Host \"\"Creating PR for branch: $currentBranch\"\"\nNew-PatchPR -Description ''Update README.md with ultra-simple bootstrap approach'' -BranchName $currentBranch\n\")",
      "Bash(/mnt/c/Program Files/GitHub CLI/gh.exe pr list --repo wizzense/AitherZero --state open --limit 10)",
      "Bash(/mnt/c/Program Files/Git/cmd/git.exe commit -m \"Update Claude settings for session work\")",
      "Bash(/mnt/c/Program Files/Git/cmd/git.exe show patch/20250702-200059-PatchManager-v3-1-PR-Awareness-and-Workflow-Management:.github/workflows/auto-release-on-merge.yml)",
      "Bash(git clone:*)",
      "Bash(/mnt/c/Program Files/PowerShell/7/pwsh.exe -NoProfile -Command \"$PSVersionTable.PSVersion; $Host.UI.RawUI.WindowSize\")",
      "Bash(cd:*)",
      "Bash(git push:*)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" .claude/scripts/test.ps1:*)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" .claude/scripts/config.ps1:*)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" .claude/scripts/security.ps1:*)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" .claude/scripts/backup.ps1:*)",
      "Bash(\"/mnt/c/Program Files/PowerShell/7/pwsh.exe\" .claude/scripts/orchestrate.ps1:*)",
      "Bash(pwsh .claude/scripts/test.ps1:*)",
      "Bash(pwsh .claude/scripts/config.ps1:*)",
      "Bash(pwsh .claude/scripts/security.ps1:*)",
      "Bash(pwsh .claude/scripts/backup.ps1:*)",
      "Bash(pwsh .claude/scripts/orchestrate.ps1:*)",
      "Bash(./tests/Run-Tests.ps1:*)",
      "Bash(Invoke-Pester:*)",
      "Bash(gh run:*)",
      "Bash(gh workflow:*)"
    ],
    "deny": []
  },
  "command_aliases": {
    "/pr": "/patchmanager workflow --create-pr",
    "/deploy-prod": "/infra deploy --env production --validate",
    "/quick-test": "/test run --suite quick",
    "/full-test": "/test run --suite all",
    "/backup-now": "/backup create --type full --encrypt",
    "/security-check": "/security scan --type quick --fix"
  }
}