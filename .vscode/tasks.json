{
    "version": "2.0.0",
    "tasks": [
        // ========================================
        // Core Testing (5 tasks)
        // ========================================
        {
            "label": "üöÄ Quick Tests - Core Functionality",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "tests/Run-Tests.ps1"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üî• Setup Tests - Installation Validation",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "tests/Run-Tests.ps1", "-Setup"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üéØ All Tests - Comprehensive Validation",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "tests/Run-Tests.ps1", "-All"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üîß CI Tests - Automated Mode",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "tests/Run-Tests.ps1", "-All", "-CI"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üßπ Clean Test Results",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Remove-Item -Path 'tests/results/*', 'logs/test-*' -Force -Recurse -ErrorAction SilentlyContinue; Write-Host 'üßπ Test results cleaned' -ForegroundColor Green"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },

        // ========================================
        // PatchManager v3.0 (4 tasks)
        // ========================================
        {
            "label": "üõ†Ô∏è PatchManager: Quick Fix",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-QuickFix -Description '${input:patchDescription}' -Changes { ${input:patchOperation} }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üöÄ PatchManager: Create Feature",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-Feature -Description '${input:patchDescription}' -Changes { ${input:patchOperation} }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üö® PatchManager: Emergency Hotfix",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-Hotfix -Description '${input:patchDescription}' -Changes { ${input:patchOperation} }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üß† PatchManager: Smart Patch",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-Patch -Description '${input:patchDescription}' -Changes { ${input:patchOperation} }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },

        // ========================================
        // Development Environment (3 tasks)
        // ========================================
        {
            "label": "üîß Setup Development Environment",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./Start-AitherZero.ps1", "-Setup"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üì¶ Import All Modules",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                ". ./aither-core/shared/Find-ProjectRoot.ps1; $projectRoot = Find-ProjectRoot; Get-ChildItem '$projectRoot/aither-core/modules' -Directory | ForEach-Object { Import-Module $_.FullName -Force; Write-Host \"‚úÖ Loaded: $($_.Name)\" -ForegroundColor Green }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üîç System Diagnostics",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host 'üîç System Information:' -ForegroundColor Cyan; Write-Host \"PowerShell: $($PSVersionTable.PSVersion)\" -ForegroundColor White; Write-Host \"OS: $($PSVersionTable.OS)\" -ForegroundColor White; Write-Host \"Platform: $($PSVersionTable.Platform)\" -ForegroundColor White; . ./aither-core/shared/Find-ProjectRoot.ps1; $projectRoot = Find-ProjectRoot; Write-Host \"Project Root: $projectRoot\" -ForegroundColor White; Write-Host 'üì¶ Module Status:' -ForegroundColor Yellow; Get-ChildItem '$projectRoot/aither-core/modules' -Directory | ForEach-Object { try { Import-Module $_.FullName -Force; Write-Host \"‚úÖ $($_.Name): OK\" -ForegroundColor Green } catch { Write-Host \"‚ùå $($_.Name): Failed\" -ForegroundColor Red } }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },

        // ========================================
        // Build & Release (4 tasks)
        // ========================================
        {
            "label": "üì¶ Build Windows Package",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./build/Build-Package.ps1", "-Platform", "windows"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üêß Build Linux Package",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./build/Build-Package.ps1", "-Platform", "linux"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üçé Build macOS Package",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./build/Build-Package.ps1", "-Platform", "macos"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üöÄ Create Release",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./release.ps1"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },

        // ========================================
        // OpenTofu Infrastructure (2 tasks)
        // ========================================
        {
            "label": "üó∫Ô∏è OpenTofu Plan",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Import-Module ./aither-core/modules/OpenTofuProvider -Force; Invoke-OpenTofuPlan"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üèóÔ∏è OpenTofu Apply",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Import-Module ./aither-core/modules/OpenTofuProvider -Force; Invoke-OpenTofuApply"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },

        // ========================================
        // Analysis & Validation (4 tasks)
        // ========================================
        {
            "label": "üîç PowerShell Script Analysis",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Invoke-ScriptAnalyzer -Path . -Recurse -Severity Warning,Error"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "‚úÖ Validate Module Manifests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Get-ChildItem -Path './aither-core/modules' -Directory | ForEach-Object { $manifestPath = Join-Path $_.FullName \"$($_.Name).psd1\"; if (Test-Path $manifestPath) { Test-ModuleManifest -Path $manifestPath; Write-Host \"‚úÖ $($_.Name) manifest valid\" -ForegroundColor Green } else { Write-Host \"‚ö†Ô∏è $($_.Name) manifest not found\" -ForegroundColor Yellow } }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üìä Code Coverage Analysis",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "if (Get-Module -Name Pester -ListAvailable) { Invoke-Pester -Path './tests' -CodeCoverage './aither-core/modules/**/*.ps*' -OutputFile './TestResults/coverage.xml' -OutputFormat 'JaCoCo' -PassThru } else { Write-Host '‚ùå Pester module required for coverage analysis' -ForegroundColor Red }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üîß Pre-Build Validation",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host 'üîç Running pre-build validation...' -ForegroundColor Cyan; pwsh -File './tests/Run-Tests.ps1' -CI; Write-Host 'üì¶ Testing module imports...' -ForegroundColor Yellow; Get-ChildItem -Path './aither-core/modules' -Directory | ForEach-Object { Import-Module $_.FullName -Force -ErrorAction Stop; Write-Host \"‚úì Module $($_.Name) imports successfully\" -ForegroundColor Green }; Write-Host '‚úÖ Pre-build validation completed!' -ForegroundColor Green"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },

        // ========================================
        // Core Utilities (4 tasks)
        // ========================================
        {
            "label": "üöÄ Run AitherZero - Interactive",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./Start-AitherZero.ps1"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "ü§ñ Run AitherZero - Automated",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./Start-AitherZero.ps1", "-Auto"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üëÅÔ∏è Run AitherZero - Preview Mode",
            "type": "shell",
            "command": "pwsh",
            "args": ["-File", "./Start-AitherZero.ps1", "-WhatIf"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        },
        {
            "label": "üßπ Clean Build Artifacts",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Remove-Item -Path 'build/output/*', 'local-build', 'AitherZero-*-local.*' -Force -Recurse -ErrorAction SilentlyContinue; Write-Host 'üßπ Build artifacts cleaned' -ForegroundColor Green"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {"cwd": "${workspaceFolder}"}
        }
    ],
    "inputs": [
        {
            "id": "patchDescription",
            "description": "Enter a description for your patch",
            "default": "Update functionality",
            "type": "promptString"
        },
        {
            "id": "patchOperation",
            "description": "Enter PowerShell commands to execute",
            "default": "Write-Host 'Patch operation executed'",
            "type": "promptString"
        }
    ]
}