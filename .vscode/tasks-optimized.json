{
    "version": "2.0.0",
    "tasks": [
        // ========================================
        // TESTING TASKS - SIMPLE & FAST
        // ========================================
        {
            "label": "Test: Run Default (Quick)",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./tests/Run-Tests.ps1"],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run default test suite (<30 seconds)"
        },
        {
            "label": "Test: Setup Tests",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./tests/Run-Tests.ps1", "-Setup"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Test setup/installation experience"
        },
        {
            "label": "Test: Run All",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./tests/Run-Tests.ps1", "-All"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run all tests (comprehensive)"
        },
        {
            "label": "Test: CI Mode",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./tests/Run-Tests.ps1", "-All", "-CI"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run all tests in CI mode"
        },
        {
            "label": "Test: PowerShell Analysis",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-Command", "Invoke-ScriptAnalyzer -Path . -Recurse"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run PSScriptAnalyzer on codebase"
        },

        // ========================================
        // RELEASE TASKS - SUPER SIMPLE
        // ========================================
        {
            "label": "Release: Create Patch",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./release.ps1"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Create a patch release (default)"
        },
        {
            "label": "Release: Create Minor",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./release.ps1", "-Type", "minor", "-Description", "${input:releaseDescription}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Create a minor release with new features"
        },
        {
            "label": "Release: Create Major",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./release.ps1", "-Type", "major", "-Description", "${input:releaseDescription}"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Create a major release with breaking changes"
        },

        // ========================================
        // BUILD TASKS - NO MORE PROFILES
        // ========================================
        {
            "label": "Build: All Platforms",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./build/Build-Package.ps1"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Build packages for all platforms"
        },
        {
            "label": "Build: Windows",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./build/Build-Package.ps1", "-Platform", "windows"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Build package for Windows"
        },
        {
            "label": "Build: Linux",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./build/Build-Package.ps1", "-Platform", "linux"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Build package for Linux"
        },
        {
            "label": "Build: macOS",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./build/Build-Package.ps1", "-Platform", "macos"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Build package for macOS"
        },

        // ========================================
        // AITHERZERO STARTUP TASKS
        // ========================================
        {
            "label": "AitherZero: Start Interactive",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Start AitherZero in interactive mode"
        },
        {
            "label": "AitherZero: Start Auto",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1", "-Auto"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Start AitherZero in automated mode"
        },
        {
            "label": "AitherZero: Setup Wizard",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1", "-Setup"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run first-time setup wizard"
        },
        {
            "label": "AitherZero: Setup Minimal",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1", "-Setup", "-InstallationProfile", "minimal"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Minimal setup (infrastructure only)"
        },
        {
            "label": "AitherZero: Setup Developer",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1", "-Setup", "-InstallationProfile", "developer"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Developer setup (includes AI tools)"
        },
        {
            "label": "AitherZero: Preview Mode",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1", "-WhatIf"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Preview what would happen without making changes"
        },
        {
            "label": "AitherZero: Run Specific Modules",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./Start-AitherZero.ps1", "-Scripts", "${input:moduleNames}"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run specific modules (comma-separated)"
        },

        // ========================================
        // PATCHMANAGER V3.0 - ATOMIC OPERATIONS
        // ========================================
        {
            "label": "Patch: New QuickFix",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-QuickFix -Description '${input:patchDescription}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Quick fix for minor changes (no branching)"
        },
        {
            "label": "Patch: New Feature",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-Feature -Description '${input:patchDescription}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Create new feature with automatic PR"
        },
        {
            "label": "Patch: New Hotfix",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-Hotfix -Description '${input:patchDescription}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Emergency hotfix (high priority)"
        },
        {
            "label": "Patch: Smart Auto-Detect",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; New-Patch -Description '${input:patchDescription}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Let smart mode choose the best approach"
        },
        {
            "label": "Patch: Sync Current Branch",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; Sync-GitBranch -Force"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Sync current branch with remote"
        },
        {
            "label": "Patch: Emergency Rollback",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/PatchManager -Force; Invoke-PatchRollback -RollbackType 'LastCommit' -CreateBackup"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Rollback last commit with backup"
        },

        // ========================================
        // AI TOOLS INTEGRATION
        // ========================================
        {
            "label": "AI: Install Claude Code",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/AIToolsIntegration -Force; Install-ClaudeCode"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Install Claude Code CLI"
        },
        {
            "label": "AI: Install Gemini CLI",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/AIToolsIntegration -Force; Install-GeminiCLI"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Install Gemini CLI"
        },
        {
            "label": "AI: Get Tools Status",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/AIToolsIntegration -Force; Get-AIToolsStatus"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Check status of all AI tools"
        },
        {
            "label": "AI: Update All Tools",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/AIToolsIntegration -Force; Update-AITools"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Update all AI tools to latest versions"
        },

        // ========================================
        // CONFIGURATION MANAGEMENT
        // ========================================
        {
            "label": "Config: List Available",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/ConfigurationCarousel -Force; Get-AvailableConfigurations"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "List all available configuration sets"
        },
        {
            "label": "Config: Switch Configuration",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/ConfigurationCarousel -Force; Switch-ConfigurationSet -ConfigurationName '${input:configName}' -Environment '${input:environment}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Switch to different configuration set"
        },
        {
            "label": "Config: Backup Current",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/ConfigurationCarousel -Force; Backup-CurrentConfiguration -Reason '${input:backupReason}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Backup current configuration"
        },

        // ========================================
        // ORCHESTRATION ENGINE
        // ========================================
        {
            "label": "Orchestrate: Run Playbook",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/OrchestrationEngine -Force; Invoke-PlaybookWorkflow -PlaybookName '${input:playbookName}'"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Run an orchestration playbook"
        },
        {
            "label": "Orchestrate: Get Status",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/OrchestrationEngine -Force; Get-PlaybookStatus"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Get status of running workflows"
        },

        // ========================================
        // INFRASTRUCTURE (OPENTOFU/TERRAFORM)
        // ========================================
        {
            "label": "Infra: Plan Changes",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/OpenTofuProvider -Force; Invoke-TofuPlan"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Plan infrastructure changes"
        },
        {
            "label": "Infra: Apply Changes",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Import-Module ./aither-core/modules/OpenTofuProvider -Force; Invoke-TofuApply"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Apply infrastructure changes"
        },

        // ========================================
        // DEVELOPMENT UTILITIES
        // ========================================
        {
            "label": "Dev: Import All Modules",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Get-ChildItem -Path 'aither-core/modules' -Directory | ForEach-Object { Import-Module $_.FullName -Force -Verbose }"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Import all AitherZero modules"
        },
        {
            "label": "Dev: Validate Module Manifests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-NoProfile",
                "-Command",
                "Get-ChildItem -Path 'aither-core/modules' -Filter '*.psd1' -Recurse | ForEach-Object { Write-Host \"Validating $($_.Name)\"; Test-ModuleManifest $_.FullName }"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Validate all module manifests"
        },
        {
            "label": "Dev: Fix Git Divergence",
            "type": "shell",
            "command": "pwsh",
            "args": ["-NoProfile", "-File", "./scripts/Fix-GitDivergence.ps1"],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "detail": "Fix branch divergence issues"
        }
    ],
    "inputs": [
        {
            "id": "releaseDescription",
            "type": "promptString",
            "description": "Enter release description",
            "default": "Bug fixes and improvements"
        },
        {
            "id": "moduleNames",
            "type": "promptString",
            "description": "Enter module names (comma-separated)",
            "default": "LabRunner,BackupManager"
        },
        {
            "id": "patchDescription",
            "type": "promptString",
            "description": "Enter patch description",
            "default": ""
        },
        {
            "id": "configName",
            "type": "promptString",
            "description": "Enter configuration name",
            "default": "default"
        },
        {
            "id": "environment",
            "type": "promptString",
            "description": "Enter environment",
            "default": "dev"
        },
        {
            "id": "backupReason",
            "type": "promptString",
            "description": "Enter backup reason",
            "default": "Manual backup"
        },
        {
            "id": "playbookName",
            "type": "promptString",
            "description": "Enter playbook name",
            "default": "sample-deployment"
        }
    ]
}