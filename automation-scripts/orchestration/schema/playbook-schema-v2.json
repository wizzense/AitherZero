{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AitherZero Orchestration Playbook Schema v2.0",
  "description": "Standardized schema for AitherZero orchestration playbooks using automation scripts",
  "type": "object",
  "required": ["metadata", "orchestration"],
  "additionalProperties": false,
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["name", "description", "version", "category"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*$",
          "description": "Playbook identifier (kebab-case)"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Brief description of playbook purpose"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+(\\.\\d+)?$",
          "description": "Semantic version"
        },
        "category": {
          "type": "string",
          "enum": ["development", "infrastructure", "testing", "deployment", "maintenance", "security", "analysis"],
          "description": "Playbook category"
        },
        "author": {
          "type": "string",
          "description": "Author or team name"
        },
        "tags": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Searchable tags"
        },
        "estimatedDuration": {
          "type": "string",
          "pattern": "^\\d+(-\\d+)?\\s+(seconds?|minutes?|hours?)$",
          "description": "Expected execution time"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification date"
        }
      }
    },
    "requirements": {
      "type": "object",
      "properties": {
        "minimumPowerShellVersion": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$",
          "default": "7.0"
        },
        "requiredModules": {
          "type": "array",
          "items": { "type": "string" }
        },
        "requiredTools": {
          "type": "array",
          "items": { "type": "string" }
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Windows", "Linux", "macOS", "CrossPlatform"]
          },
          "default": ["CrossPlatform"]
        },
        "permissions": {
          "type": "array",
          "items": { "type": "string" }
        },
        "apiKeys": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "orchestration": {
      "type": "object",
      "required": ["stages"],
      "properties": {
        "defaultVariables": {
          "type": "object",
          "description": "Default variable values"
        },
        "profiles": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z][a-zA-Z0-9-]*$": {
              "type": "object",
              "properties": {
                "description": { "type": "string" },
                "variables": { "type": "object" },
                "overrides": { "type": "object" }
              }
            }
          }
        },
        "stages": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "description", "sequences"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Stage identifier"
              },
              "description": {
                "type": "string",
                "description": "Stage purpose"
              },
              "sequences": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "pattern": "^(\\d{4}(-\\d{4})?|\\d{4}(,\\d{4})*|\\d{2}\\*|stage:[a-zA-Z][a-zA-Z0-9]*|tag:[a-zA-Z][a-zA-Z0-9]*)$",
                  "description": "Automation script sequence (e.g., '0001', '0001-0099', '0201,0207', '02*', 'stage:Core')"
                }
              },
              "variables": {
                "type": "object",
                "description": "Stage-specific variables"
              },
              "condition": {
                "type": "string",
                "description": "PowerShell condition for conditional execution"
              },
              "continueOnError": {
                "type": "boolean",
                "default": false,
                "description": "Continue if stage fails"
              },
              "parallel": {
                "type": "boolean",
                "default": true,
                "description": "Allow parallel execution within stage"
              },
              "timeout": {
                "type": "integer",
                "minimum": 30,
                "description": "Stage timeout in seconds"
              },
              "retries": {
                "type": "integer",
                "minimum": 0,
                "maximum": 5,
                "default": 0,
                "description": "Number of retry attempts"
              }
            }
          }
        }
      }
    },
    "validation": {
      "type": "object",
      "properties": {
        "preConditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "condition"],
            "properties": {
              "name": { "type": "string" },
              "condition": { "type": "string" },
              "message": { "type": "string" }
            }
          }
        },
        "postConditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "condition"],
            "properties": {
              "name": { "type": "string" },
              "condition": { "type": "string" },
              "message": { "type": "string" }
            }
          }
        },
        "thresholds": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z][a-zA-Z0-9]*$": {
              "type": "object",
              "properties": {
                "maxCount": { "type": "integer" },
                "action": { 
                  "type": "string",
                  "enum": ["continue", "warn", "fail", "block"]
                }
              }
            }
          }
        }
      }
    },
    "notifications": {
      "type": "object",
      "properties": {
        "onStart": {
          "$ref": "#/definitions/notification"
        },
        "onSuccess": {
          "$ref": "#/definitions/notification"
        },
        "onFailure": {
          "$ref": "#/definitions/notification"
        },
        "onWarning": {
          "$ref": "#/definitions/notification"
        }
      }
    },
    "reporting": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "formats": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["HTML", "JSON", "Markdown", "XML", "CSV"]
          },
          "default": ["JSON"]
        },
        "outputPath": {
          "type": "string",
          "default": "./reports"
        },
        "includeMetrics": {
          "type": "boolean",
          "default": true
        },
        "includeLogs": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "definitions": {
    "notification": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Notification message"
        },
        "level": {
          "type": "string",
          "enum": ["Information", "Warning", "Error", "Success"],
          "default": "Information"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["console", "log", "email", "teams", "slack", "github"]
          },
          "default": ["console", "log"]
        }
      }
    }
  }
}