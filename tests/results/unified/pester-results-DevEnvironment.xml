<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="77" errors="0" failures="49" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-07-08" time="17:42:06">
  <environment user-domain="" platform="Linux" cwd="/workspaces/AitherZero" os-version="6.8.0-1027-azure" clr-version="9.0.4" nunit-version="2.5.8.0" user="codespace" machine-name="codespaces-6c6eb1" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="4.4564" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1" executed="True" result="Failure" success="False" time="4.4564" asserts="0" description="/workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="DevEnvironment Module Structure" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="DevEnvironment Module Structure">
            <results>
              <test-suite type="TestFixture" name="DevEnvironment Module Structure.Module Files and Manifest" executed="True" result="Success" success="True" time="0.05" asserts="0" description="DevEnvironment Module Structure.Module Files and Manifest">
                <results>
                  <test-case description="Should have a module manifest file" name="DevEnvironment Module Structure.Module Files and Manifest.Should have a module manifest file" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have a module script file" name="DevEnvironment Module Structure.Module Files and Manifest.Should have a module script file" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have a Public functions directory" name="DevEnvironment Module Structure.Module Files and Manifest.Should have a Public functions directory" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have README documentation" name="DevEnvironment Module Structure.Module Files and Manifest.Should have README documentation" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have test files" name="DevEnvironment Module Structure.Module Files and Manifest.Should have test files" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DevEnvironment Module Structure.Module Manifest Validation" executed="True" result="Success" success="True" time="0.1071" asserts="0" description="DevEnvironment Module Structure.Module Manifest Validation">
                <results>
                  <test-case description="Should have correct module version format" name="DevEnvironment Module Structure.Module Manifest Validation.Should have correct module version format" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should require PowerShell 7.0 or higher" name="DevEnvironment Module Structure.Module Manifest Validation.Should require PowerShell 7.0 or higher" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export the expected functions" name="DevEnvironment Module Structure.Module Manifest Validation.Should export the expected functions" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Core DevEnvironment Functions" executed="True" result="Failure" success="False" time="0.9159" asserts="0" description="Core DevEnvironment Functions">
            <results>
              <test-suite type="TestFixture" name="Core DevEnvironment Functions.Function Availability" executed="True" result="Success" success="True" time="0.2468" asserts="0" description="Core DevEnvironment Functions.Function Availability">
                <results>
                  <test-case description="Should export Initialize-DevEnvironment function" name="Core DevEnvironment Functions.Function Availability.Should export Initialize-DevEnvironment function" time="0.0628" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Get-DevEnvironmentStatus function" name="Core DevEnvironment Functions.Function Availability.Should export Get-DevEnvironmentStatus function" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Test-DevEnvironment function" name="Core DevEnvironment Functions.Function Availability.Should export Test-DevEnvironment function" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Optimize-PlatformEnvironment function" name="Core DevEnvironment Functions.Function Availability.Should export Optimize-PlatformEnvironment function" time="0.0718" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Core DevEnvironment Functions.Get-DevEnvironmentStatus Function" executed="True" result="Failure" success="False" time="0.4487" asserts="0" description="Core DevEnvironment Functions.Get-DevEnvironmentStatus Function">
                <results>
                  <test-case description="Should return a valid status object" name="Core DevEnvironment Functions.Get-DevEnvironmentStatus Function.Should return a valid status object" time="0.0456" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Get-DevEnvironmentStatus, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Get-DevEnvironmentStatus.ps1:17
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:130</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should include PowerShell version information" name="Core DevEnvironment Functions.Get-DevEnvironmentStatus Function.Should include PowerShell version information" time="0.0558" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Get-DevEnvironmentStatus, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Get-DevEnvironmentStatus.ps1:17
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:138</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should include module information" name="Core DevEnvironment Functions.Get-DevEnvironmentStatus Function.Should include module information" time="0.0598" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Get-DevEnvironmentStatus, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Get-DevEnvironmentStatus.ps1:17
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:144</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support metrics inclusion" name="Core DevEnvironment Functions.Get-DevEnvironmentStatus Function.Should support metrics inclusion" time="0.0332" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Get-DevEnvironmentStatus, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Get-DevEnvironmentStatus.ps1:17
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:150</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Core DevEnvironment Functions.Test-DevEnvironment Function" executed="True" result="Failure" success="False" time="0.7971" asserts="0" description="Core DevEnvironment Functions.Test-DevEnvironment Function">
                <results>
                  <test-case description="Should perform basic environment testing" name="Core DevEnvironment Functions.Test-DevEnvironment Function.Should perform basic environment testing" time="0.0595" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Test-DevEnvironment&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-DevEnvironment.ps1:72
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:158</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should test PowerShell environment" name="Core DevEnvironment Functions.Test-DevEnvironment Function.Should test PowerShell environment" time="0.0679" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Test-DevEnvironment&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-DevEnvironment.ps1:72
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:165</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should test Git environment" name="Core DevEnvironment Functions.Test-DevEnvironment Function.Should test Git environment" time="0.0772" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Test-DevEnvironment&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-DevEnvironment.ps1:72
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:172</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support AI tools testing when requested" name="Core DevEnvironment Functions.Test-DevEnvironment Function.Should support AI tools testing when requested" time="0.0668" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Test-DevEnvironment&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-DevEnvironment.ps1:72
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:179</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support performance metrics when requested" name="Core DevEnvironment Functions.Test-DevEnvironment Function.Should support performance metrics when requested" time="0.0598" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Test-DevEnvironment&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-DevEnvironment.ps1:72
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:186</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="VS Code Integration" executed="True" result="Failure" success="False" time="1.4395" asserts="0" description="VS Code Integration">
            <results>
              <test-suite type="TestFixture" name="VS Code Integration.VS Code Functions" executed="True" result="Success" success="True" time="0.1979" asserts="0" description="VS Code Integration.VS Code Functions">
                <results>
                  <test-case description="Should export Initialize-VSCodeWorkspace function" name="VS Code Integration.VS Code Functions.Should export Initialize-VSCodeWorkspace function" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Test-VSCodeIntegration function" name="VS Code Integration.VS Code Functions.Should export Test-VSCodeIntegration function" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Install-VSCodeExtensions function" name="VS Code Integration.VS Code Functions.Should export Install-VSCodeExtensions function" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Update-VSCodeSettings function" name="VS Code Integration.VS Code Functions.Should export Update-VSCodeSettings function" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="VS Code Integration.Test-VSCodeIntegration Function" executed="True" result="Failure" success="False" time="0.3055" asserts="0" description="VS Code Integration.Test-VSCodeIntegration Function">
                <results>
                  <test-case description="Should test VS Code integration without errors" name="VS Code Integration.Test-VSCodeIntegration Function.Should test VS Code integration without errors" time="0.0474" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot bind argument to parameter 'Path' because it is null." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:215 char:15
    +             { Test-VSCodeIntegration } | Should -Not -Throw
    +               ~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Test-VSCodeIntegration } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:215
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:215</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should return valid integration test results" name="VS Code Integration.Test-VSCodeIntegration Function.Should return valid integration test results" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace>at Test-VSCodeIntegration&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-VSCodeIntegration.ps1:47
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:219</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support detailed testing mode" name="VS Code Integration.Test-VSCodeIntegration Function.Should support detailed testing mode" time="0.035" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot bind argument to parameter 'Path' because it is null." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:227 char:15
    +             { Test-VSCodeIntegration -Detailed } | Should -Not -Throw
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Test-VSCodeIntegration -Detailed } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:227
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:227</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support extension checking" name="VS Code Integration.Test-VSCodeIntegration Function.Should support extension checking" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot bind argument to parameter 'Path' because it is null." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:231 char:15
    + …           { Test-VSCodeIntegration -RequiredExtensions @('ms-vscode.p …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Test-VSCodeIntegration -RequiredExtensions @('ms-vscode.powershell') } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:231
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:231</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="VS Code Integration.Initialize-VSCodeWorkspace Function" executed="True" result="Failure" success="False" time="0.5184" asserts="0" description="VS Code Integration.Initialize-VSCodeWorkspace Function">
                <results>
                  <test-case description="Should support WhatIf mode" name="VS Code Integration.Initialize-VSCodeWorkspace Function.Should support WhatIf mode" time="0.0785" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:237 char:15
    +             { Initialize-VSCodeWorkspace -WhatIf } | Should -Not -Thr …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Initialize-VSCodeWorkspace -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:237
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:237</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support workspace creation" name="VS Code Integration.Initialize-VSCodeWorkspace Function.Should support workspace creation" time="0.0555" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:241 char:15
    + …           { Initialize-VSCodeWorkspace -CreateWorkspaceFile -WhatIf } …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Initialize-VSCodeWorkspace -CreateWorkspaceFile -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:241
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:241</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support extension installation" name="VS Code Integration.Initialize-VSCodeWorkspace Function.Should support extension installation" time="0.0732" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:245 char:15
    + …           { Initialize-VSCodeWorkspace -InstallExtensions -WhatIf } | …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Initialize-VSCodeWorkspace -InstallExtensions -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:245
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:245</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="AI Tools Integration" executed="True" result="Failure" success="False" time="1.7413" asserts="0" description="AI Tools Integration">
            <results>
              <test-suite type="TestFixture" name="AI Tools Integration.AI Tools Functions" executed="True" result="Success" success="True" time="0.0849" asserts="0" description="AI Tools Integration.AI Tools Functions">
                <results>
                  <test-case description="Should export Install-ClaudeCodeDependencies function" name="AI Tools Integration.AI Tools Functions.Should export Install-ClaudeCodeDependencies function" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export Install-GeminiCLIDependencies function" name="AI Tools Integration.AI Tools Functions.Should export Install-GeminiCLIDependencies function" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="AI Tools Integration.Claude Code Dependencies" executed="True" result="Failure" success="False" time="0.2221" asserts="0" description="AI Tools Integration.Claude Code Dependencies">
                <results>
                  <test-case description="Should support WhatIf mode for dependency installation" name="AI Tools Integration.Claude Code Dependencies.Should support WhatIf mode for dependency installation" time="0.0493" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:263 char:15
    +             { Install-ClaudeCodeDependencies -WhatIf } | Should -Not  …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Install-ClaudeCodeDependencies -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:263
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:263</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should detect platform requirements" name="AI Tools Integration.Claude Code Dependencies.Should detect platform requirements" time="0.0759" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:268 char:15
    +             { Install-ClaudeCodeDependencies -WhatIf } | Should -Not  …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Install-ClaudeCodeDependencies -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:268
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:268</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="AI Tools Integration.Integration with AIToolsIntegration Module" executed="True" result="Success" success="True" time="0.2967" asserts="0" description="AI Tools Integration.Integration with AIToolsIntegration Module">
                <results>
                  <test-case description="Should be able to use AIToolsIntegration functions if available" name="AI Tools Integration.Integration with AIToolsIntegration Module.Should be able to use AIToolsIntegration functions if available" time="0.0693" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Platform Optimization" executed="True" result="Failure" success="False" time="2.0688" asserts="0" description="Platform Optimization">
            <results>
              <test-suite type="TestFixture" name="Platform Optimization.Platform Detection" executed="True" result="Success" success="True" time="0.0196" asserts="0" description="Platform Optimization.Platform Detection">
                <results>
                  <test-case description="Should correctly detect current platform" name="Platform Optimization.Platform Detection.Should correctly detect current platform" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Platform Optimization.Optimize-PlatformEnvironment Function" executed="True" result="Failure" success="False" time="0.3213" asserts="0" description="Platform Optimization.Optimize-PlatformEnvironment Function">
                <results>
                  <test-case description="Should support WhatIf mode" name="Platform Optimization.Optimize-PlatformEnvironment Function.Should support WhatIf mode" time="0.0662" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:292 char:15
    +             { Optimize-PlatformEnvironment -WhatIf } | Should -Not -T …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Optimize-PlatformEnvironment -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:292
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:292</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support platform-specific optimization" name="Platform Optimization.Optimize-PlatformEnvironment Function.Should support platform-specific optimization" time="0.0502" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:297 char:15
    + …           { Optimize-PlatformEnvironment -Platform $platform -WhatIf  …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Optimize-PlatformEnvironment -Platform $platform -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:297
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:297</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support performance tuning options" name="Platform Optimization.Optimize-PlatformEnvironment Function.Should support performance tuning options" time="0.0699" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:301 char:15
    + …           { Optimize-PlatformEnvironment -IncludePerformanceTuning -W …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Optimize-PlatformEnvironment -IncludePerformanceTuning -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:301
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:301</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support development tools configuration" name="Platform Optimization.Optimize-PlatformEnvironment Function.Should support development tools configuration" time="0.0511" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:305 char:15
    + …           { Optimize-PlatformEnvironment -ConfigureDevelopmentTools - …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Optimize-PlatformEnvironment -ConfigureDevelopmentTools -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:305
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:305</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should return optimization results" name="Platform Optimization.Optimize-PlatformEnvironment Function.Should return optimization results" time="0.0585" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Optimize-PlatformEnvironment&lt;Begin&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Optimize-PlatformEnvironment.ps1:80
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:309</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Cross-Platform Compatibility" executed="True" result="Success" success="True" time="2.1605" asserts="0" description="Cross-Platform Compatibility">
            <results>
              <test-suite type="TestFixture" name="Cross-Platform Compatibility.Path Handling" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Cross-Platform Compatibility.Path Handling">
                <results>
                  <test-case description="Should handle paths correctly on current platform" name="Cross-Platform Compatibility.Path Handling.Should handle paths correctly on current platform" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should use platform-appropriate path separators" name="Cross-Platform Compatibility.Path Handling.Should use platform-appropriate path separators" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Cross-Platform Compatibility.Command Availability" executed="True" result="Success" success="True" time="0.0732" asserts="0" description="Cross-Platform Compatibility.Command Availability">
                <results>
                  <test-case description="Should detect PowerShell correctly on all platforms" name="Cross-Platform Compatibility.Command Availability.Should detect PowerShell correctly on all platforms" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should handle platform-specific commands gracefully" name="Cross-Platform Compatibility.Command Availability.Should handle platform-specific commands gracefully" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Error Handling and Resilience" executed="True" result="Failure" success="False" time="2.4142" asserts="0" description="Error Handling and Resilience">
            <results>
              <test-suite type="TestFixture" name="Error Handling and Resilience.Function Parameter Validation" executed="True" result="Failure" success="False" time="0.079" asserts="0" description="Error Handling and Resilience.Function Parameter Validation">
                <results>
                  <test-case description="Should validate parameters correctly in Initialize-DevEnvironment" name="Error Handling and Resilience.Function Parameter Validation.Should validate parameters correctly in Initialize-DevEnvironment" time="0.054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:360 char:15
    +             { Initialize-DevEnvironment -WhatIf } | Should -Not -Thro …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Initialize-DevEnvironment -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:360
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:360</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should validate parameters correctly in Test-DevEnvironment" name="Error Handling and Resilience.Function Parameter Validation.Should validate parameters correctly in Test-DevEnvironment" time="0.01" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "A parameter cannot be found that matches parameter name 'WhatIf'." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:364 char:35
    +             { Test-DevEnvironment -WhatIf } | Should -Not -Throw
    +                                   ~~~~~~~.</message>
                      <stack-trace>at { Test-DevEnvironment -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:364
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:364</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should validate parameters correctly in Optimize-PlatformEnvironment" name="Error Handling and Resilience.Function Parameter Validation.Should validate parameters correctly in Optimize-PlatformEnvironment" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Error Handling and Resilience.Graceful Degradation" executed="True" result="Failure" success="False" time="0.2443" asserts="0" description="Error Handling and Resilience.Graceful Degradation">
                <results>
                  <test-case description="Should handle missing VS Code gracefully" name="Error Handling and Resilience.Graceful Degradation.Should handle missing VS Code gracefully" time="0.0229" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot bind argument to parameter 'Path' because it is null." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:375 char:15
    +             { Test-VSCodeIntegration } | Should -Not -Throw
    +               ~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Test-VSCodeIntegration } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:375
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:375</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should handle missing Node.js gracefully" name="Error Handling and Resilience.Graceful Degradation.Should handle missing Node.js gracefully" time="0.056" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:380 char:15
    +             { Install-ClaudeCodeDependencies -WhatIf } | Should -Not  …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Install-ClaudeCodeDependencies -WhatIf } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:380
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:380</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should handle missing Git gracefully" name="Error Handling and Resilience.Graceful Degradation.Should handle missing Git gracefully" time="0.0807" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:385 char:15
    +             { Test-DevEnvironment } | Should -Not -Throw
    +               ~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Test-DevEnvironment } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:385
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:385</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Integration with Other Modules" executed="True" result="Failure" success="False" time="3.3208" asserts="0" description="Integration with Other Modules">
            <results>
              <test-suite type="TestFixture" name="Integration with Other Modules.Logging Integration" executed="True" result="Failure" success="False" time="0.115" asserts="0" description="Integration with Other Modules.Logging Integration">
                <results>
                  <test-case description="Should use Write-CustomLog function if available" name="Integration with Other Modules.Logging Integration.Should use Write-CustomLog function if available" time="0.058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:395 char:19
    +                 { Get-DevEnvironmentStatus } | Should -Not -Throw
    +                   ~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Get-DevEnvironmentStatus } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:395
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:395</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have fallback logging if Logging module unavailable" name="Integration with Other Modules.Logging Integration.Should have fallback logging if Logging module unavailable" time="0.0514" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-CustomLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:401 char:15
    +             { Get-DevEnvironmentStatus } | Should -Not -Throw
    +               ~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Get-DevEnvironmentStatus } | Should -Not -Throw, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:401
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:401</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Integration with Other Modules.AIToolsIntegration Module" executed="True" result="Success" success="True" time="0.8991" asserts="0" description="Integration with Other Modules.AIToolsIntegration Module">
                <results>
                  <test-case description="Should integrate with AIToolsIntegration if available" name="Integration with Other Modules.AIToolsIntegration Module.Should integrate with AIToolsIntegration if available" time="0.7286" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Performance and Resource Usage" executed="True" result="Failure" success="False" time="3.9031" asserts="0" description="Performance and Resource Usage">
            <results>
              <test-suite type="TestFixture" name="Performance and Resource Usage.Module Loading Performance" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="Performance and Resource Usage.Module Loading Performance">
                <results>
                  <test-case description="Should load module in reasonable time" name="Performance and Resource Usage.Module Loading Performance.Should load module in reasonable time" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Performance and Resource Usage.Memory Usage" executed="True" result="Failure" success="False" time="0.5762" asserts="0" description="Performance and Resource Usage.Memory Usage">
                <results>
                  <test-case description="Should not consume excessive memory" name="Performance and Resource Usage.Memory Usage.Should not consume excessive memory" time="0.5103" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Test-GeneralEnvironment' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at Test-DevEnvironment&lt;Process&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Test-DevEnvironment.ps1:120
at Get-DevEnvironmentStatus, /workspaces/AitherZero/aither-core/modules/DevEnvironment/Public/Get-DevEnvironmentStatus.ps1:49
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:432</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Documentation and Help" executed="True" result="Failure" success="False" time="4.1812" asserts="0" description="Documentation and Help">
            <results>
              <test-suite type="TestFixture" name="Documentation and Help.Function Help" executed="True" result="Failure" success="False" time="0.2459" asserts="0" description="Documentation and Help.Function Help">
                <results>
                  <test-case description="Should have help documentation for Initialize-DevEnvironment" name="Documentation and Help.Function Help.Should have help documentation for Initialize-DevEnvironment" time="0.0338" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:458</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have parameter documentation for Initialize-DevEnvironment" name="Documentation and Help.Function Help.Should have parameter documentation for Initialize-DevEnvironment" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:464</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have examples for Initialize-DevEnvironment" name="Documentation and Help.Function Help.Should have examples for Initialize-DevEnvironment" time="0.0185" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:473</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have help documentation for Get-DevEnvironmentStatus" name="Documentation and Help.Function Help.Should have help documentation for Get-DevEnvironmentStatus" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:458</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have parameter documentation for Get-DevEnvironmentStatus" name="Documentation and Help.Function Help.Should have parameter documentation for Get-DevEnvironmentStatus" time="0.0257" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:464</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have examples for Get-DevEnvironmentStatus" name="Documentation and Help.Function Help.Should have examples for Get-DevEnvironmentStatus" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:473</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have help documentation for Test-DevEnvironment" name="Documentation and Help.Function Help.Should have help documentation for Test-DevEnvironment" time="0.0233" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:458</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have parameter documentation for Test-DevEnvironment" name="Documentation and Help.Function Help.Should have parameter documentation for Test-DevEnvironment" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:464</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have examples for Test-DevEnvironment" name="Documentation and Help.Function Help.Should have examples for Test-DevEnvironment" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:473</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have help documentation for Initialize-VSCodeWorkspace" name="Documentation and Help.Function Help.Should have help documentation for Initialize-VSCodeWorkspace" time="0.0197" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:458</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have parameter documentation for Initialize-VSCodeWorkspace" name="Documentation and Help.Function Help.Should have parameter documentation for Initialize-VSCodeWorkspace" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:464</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have examples for Initialize-VSCodeWorkspace" name="Documentation and Help.Function Help.Should have examples for Initialize-VSCodeWorkspace" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:473</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have help documentation for Test-VSCodeIntegration" name="Documentation and Help.Function Help.Should have help documentation for Test-VSCodeIntegration" time="0.0251" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:458</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have parameter documentation for Test-VSCodeIntegration" name="Documentation and Help.Function Help.Should have parameter documentation for Test-VSCodeIntegration" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:464</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have examples for Test-VSCodeIntegration" name="Documentation and Help.Function Help.Should have examples for Test-VSCodeIntegration" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:473</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have help documentation for Optimize-PlatformEnvironment" name="Documentation and Help.Function Help.Should have help documentation for Optimize-PlatformEnvironment" time="0.0151" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:458</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have parameter documentation for Optimize-PlatformEnvironment" name="Documentation and Help.Function Help.Should have parameter documentation for Optimize-PlatformEnvironment" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:464</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have examples for Optimize-PlatformEnvironment" name="Documentation and Help.Function Help.Should have examples for Optimize-PlatformEnvironment" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ValidationMetadataException: The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
ParameterBindingValidationException: Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/DevEnvironment/tests/DevEnvironment.Tests.ps1:473</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Documentation and Help.README Documentation" executed="True" result="Success" success="True" time="0.2713" asserts="0" description="Documentation and Help.README Documentation">
                <results>
                  <test-case description="Should have comprehensive README" name="Documentation and Help.README Documentation.Should have comprehensive README" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>