<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="34" errors="0" failures="7" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-07-08" time="18:49:31">
  <environment machine-name="codespaces-6c6eb1" os-version="6.8.0-1027-azure" user="codespace" clr-version="9.0.4" user-domain="" nunit-version="2.5.8.0" platform="Linux" cwd="/workspaces/AitherZero" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="2.493" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1" executed="True" result="Failure" success="False" time="2.493" asserts="0" description="/workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="ConfigurationCore Module Tests" executed="True" result="Failure" success="False" time="1.9705" asserts="0" description="ConfigurationCore Module Tests">
            <results>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Module Import and Basic Functions" executed="True" result="Success" success="True" time="0.2421" asserts="0" description="ConfigurationCore Module Tests.Module Import and Basic Functions">
                <results>
                  <test-case description="Should import the module without errors" name="ConfigurationCore Module Tests.Module Import and Basic Functions.Should import the module without errors" time="0.1647" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export all required functions" name="ConfigurationCore Module Tests.Module Import and Basic Functions.Should export all required functions" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Configuration Store Management" executed="True" result="Failure" success="False" time="0.5648" asserts="0" description="ConfigurationCore Module Tests.Configuration Store Management">
                <results>
                  <test-case description="Should get configuration store" name="ConfigurationCore Module Tests.Configuration Store Management.Should get configuration store" time="0.1069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $store.Modules | Should -Not -BeNullOrEmpty, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:80
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:80</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should get configuration store as JSON" name="ConfigurationCore Module Tests.Configuration Store Management.Should get configuration store as JSON" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should set configuration store" name="ConfigurationCore Module Tests.Configuration Store Management.Should set configuration store" time="0.0528" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should export configuration store" name="ConfigurationCore Module Tests.Configuration Store Management.Should export configuration store" time="0.0651" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import configuration store" name="ConfigurationCore Module Tests.Configuration Store Management.Should import configuration store" time="0.0574" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Module Configuration Management" executed="True" result="Success" success="True" time="0.9524" asserts="0" description="ConfigurationCore Module Tests.Module Configuration Management">
                <results>
                  <test-case description="Should register module configuration" name="ConfigurationCore Module Tests.Module Configuration Management.Should register module configuration" time="0.0821" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should get module configuration" name="ConfigurationCore Module Tests.Module Configuration Management.Should get module configuration" time="0.0534" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should set module configuration" name="ConfigurationCore Module Tests.Module Configuration Management.Should set module configuration" time="0.1108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should validate module configuration" name="ConfigurationCore Module Tests.Module Configuration Management.Should validate module configuration" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should merge module configuration" name="ConfigurationCore Module Tests.Module Configuration Management.Should merge module configuration" time="0.0996" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Environment Management" executed="True" result="Success" success="True" time="1.1894" asserts="0" description="ConfigurationCore Module Tests.Environment Management">
                <results>
                  <test-case description="Should get current environment" name="ConfigurationCore Module Tests.Environment Management.Should get current environment" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should get all environments" name="ConfigurationCore Module Tests.Environment Management.Should get all environments" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should create new environment" name="ConfigurationCore Module Tests.Environment Management.Should create new environment" time="0.0627" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should set active environment" name="ConfigurationCore Module Tests.Environment Management.Should set active environment" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should copy environment settings" name="ConfigurationCore Module Tests.Environment Management.Should copy environment settings" time="0.057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should remove environment" name="ConfigurationCore Module Tests.Environment Management.Should remove environment" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Schema Management" executed="True" result="Success" success="True" time="1.2369" asserts="0" description="ConfigurationCore Module Tests.Schema Management">
                <results>
                  <test-case description="Should get all schemas" name="ConfigurationCore Module Tests.Schema Management.Should get all schemas" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should get schema with defaults" name="ConfigurationCore Module Tests.Schema Management.Should get schema with defaults" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Configuration Validation" executed="True" result="Success" success="True" time="1.4464" asserts="0" description="ConfigurationCore Module Tests.Configuration Validation">
                <results>
                  <test-case description="Should validate valid configuration" name="ConfigurationCore Module Tests.Configuration Validation.Should validate valid configuration" time="0.0668" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should detect missing required property" name="ConfigurationCore Module Tests.Configuration Validation.Should detect missing required property" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should detect invalid enum value" name="ConfigurationCore Module Tests.Configuration Validation.Should detect invalid enum value" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should detect out of range value" name="ConfigurationCore Module Tests.Configuration Validation.Should detect out of range value" time="0.0532" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Hot Reload Functionality" executed="True" result="Failure" success="False" time="1.5929" asserts="0" description="ConfigurationCore Module Tests.Hot Reload Functionality">
                <results>
                  <test-case description="Should enable hot reload" name="ConfigurationCore Module Tests.Hot Reload Functionality.Should enable hot reload" time="0.0555" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should get watcher information" name="ConfigurationCore Module Tests.Hot Reload Functionality.Should get watcher information" time="0.0135" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $watchers | Should -Not -BeNullOrEmpty, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:320
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:320</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should disable hot reload" name="ConfigurationCore Module Tests.Hot Reload Functionality.Should disable hot reload" time="0.0657" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Configuration Comparison" executed="True" result="Success" success="True" time="1.6656" asserts="0" description="ConfigurationCore Module Tests.Configuration Comparison">
                <results>
                  <test-case description="Should compare configurations" name="ConfigurationCore Module Tests.Configuration Comparison.Should compare configurations" time="0.0623" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Backup and Restore" executed="True" result="Failure" success="False" time="1.9024" asserts="0" description="ConfigurationCore Module Tests.Backup and Restore">
                <results>
                  <test-case description="Should create configuration backup" name="ConfigurationCore Module Tests.Backup and Restore.Should create configuration backup" time="0.0617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should restore configuration from backup" name="ConfigurationCore Module Tests.Backup and Restore.Should restore configuration from backup" time="0.1273" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'DefaultValue', but got $null.</message>
                      <stack-trace>at $config.TestProperty | Should -Be 'DefaultValue', /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:378
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:378</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationCore Module Tests.Variable Expansion" executed="True" result="Failure" success="False" time="1.9545" asserts="0" description="ConfigurationCore Module Tests.Variable Expansion">
                <results>
                  <test-case description="Should expand environment variables" name="ConfigurationCore Module Tests.Variable Expansion.Should expand environment variables" time="0.0178" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: You cannot call a method on a null-valued expression.</message>
                      <stack-trace>at Set-ModuleConfiguration, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/Public/Set-ModuleConfiguration.ps1:60
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:388</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should expand platform variables" name="ConfigurationCore Module Tests.Variable Expansion.Should expand platform variables" time="0.0279" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: You cannot call a method on a null-valued expression.</message>
                      <stack-trace>at Set-ModuleConfiguration, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/Public/Set-ModuleConfiguration.ps1:60
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:398</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConfigurationCore Integration Tests" executed="True" result="Failure" success="False" time="2.0735" asserts="0" description="ConfigurationCore Integration Tests">
            <results>
              <test-suite type="TestFixture" name="ConfigurationCore Integration Tests.Module Integration" executed="True" result="Failure" success="False" time="0.0813" asserts="0" description="ConfigurationCore Integration Tests.Module Integration">
                <results>
                  <test-case description="Should support module lifecycle" name="ConfigurationCore Integration Tests.Module Integration.Should support module lifecycle" time="0.0165" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Cannot index into a null array.</message>
                      <stack-trace>at Register-ModuleConfiguration, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/Public/Register-ModuleConfiguration.ps1:37
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:416</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should support environment-specific configuration" name="ConfigurationCore Integration Tests.Module Integration.Should support environment-specific configuration" time="0.0579" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: You cannot call a method on a null-valued expression.</message>
                      <stack-trace>at Set-ModuleConfiguration, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/Public/Set-ModuleConfiguration.ps1:60
at &lt;ScriptBlock&gt;, /workspaces/AitherZero/aither-core/modules/ConfigurationCore/tests/ConfigurationCore.Tests.ps1:442</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>