{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AitherZero Configuration Schema",
  "description": "Schema for AitherZero configuration files",
  "type": "object",
  "properties": {
    "metadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Configuration version"
        },
        "description": {
          "type": "string",
          "description": "Configuration description"
        },
        "environment": {
          "type": "string",
          "enum": ["dev", "staging", "prod"],
          "description": "Target environment"
        },
        "profile": {
          "type": "string",
          "enum": ["minimal", "developer", "enterprise", "full"],
          "description": "Configuration profile"
        },
        "lastUpdated": {
          "type": "string",
          "description": "Last update timestamp"
        }
      }
    },
    "system": {
      "type": "object",
      "properties": {
        "ComputerName": {
          "type": "string",
          "description": "Computer name"
        },
        "SetComputerName": {
          "type": "boolean",
          "description": "Whether to set computer name"
        },
        "DNSServers": {
          "type": "string",
          "description": "DNS servers (comma-separated)"
        },
        "SetDNSServers": {
          "type": "boolean",
          "description": "Whether to set DNS servers"
        },
        "TrustedHosts": {
          "type": "string",
          "description": "Trusted hosts for PowerShell remoting"
        },
        "SetTrustedHosts": {
          "type": "boolean",
          "description": "Whether to set trusted hosts"
        },
        "DisableTCPIP6": {
          "type": "boolean",
          "description": "Whether to disable IPv6"
        },
        "AllowRemoteDesktop": {
          "type": "boolean",
          "description": "Whether to allow remote desktop"
        },
        "ConfigureFirewall": {
          "type": "boolean",
          "description": "Whether to configure firewall"
        },
        "FirewallPorts": {
          "type": "array",
          "items": {
            "oneOf": [
              {"type": "integer"},
              {"type": "string"}
            ]
          },
          "description": "Firewall ports to open"
        },
        "ConfigPXE": {
          "type": "boolean",
          "description": "Whether to configure PXE"
        }
      }
    },
    "tools": {
      "type": "object",
      "properties": {
        "InstallGit": {
          "type": "boolean",
          "description": "Whether to install Git"
        },
        "InstallGitHubCLI": {
          "type": "boolean",
          "description": "Whether to install GitHub CLI"
        },
        "InstallPwsh": {
          "type": "boolean",
          "description": "Whether to install PowerShell 7"
        },
        "InstallHyperV": {
          "type": "boolean",
          "description": "Whether to install Hyper-V"
        },
        "InstallWAC": {
          "type": "boolean",
          "description": "Whether to install Windows Admin Center"
        },
        "InstallGo": {
          "type": "boolean",
          "description": "Whether to install Go"
        },
        "InstallPoetry": {
          "type": "boolean",
          "description": "Whether to install Poetry"
        },
        "InstallOpenTofu": {
          "type": "boolean",
          "description": "Whether to install OpenTofu"
        },
        "InstallCA": {
          "type": "boolean",
          "description": "Whether to install Certificate Authority"
        },
        "InstallCosign": {
          "type": "boolean",
          "description": "Whether to install Cosign"
        },
        "InstallGPG": {
          "type": "boolean",
          "description": "Whether to install GPG"
        },
        "InstallPython": {
          "type": "boolean",
          "description": "Whether to install Python"
        },
        "InstallDockerDesktop": {
          "type": "boolean",
          "description": "Whether to install Docker Desktop"
        },
        "Install7Zip": {
          "type": "boolean",
          "description": "Whether to install 7-Zip"
        },
        "InstallVSCode": {
          "type": "boolean",
          "description": "Whether to install VS Code"
        },
        "InstallVSBuildTools": {
          "type": "boolean",
          "description": "Whether to install VS Build Tools"
        },
        "InstallAzureCLI": {
          "type": "boolean",
          "description": "Whether to install Azure CLI"
        },
        "InstallAWSCLI": {
          "type": "boolean",
          "description": "Whether to install AWS CLI"
        },
        "InstallPacker": {
          "type": "boolean",
          "description": "Whether to install Packer"
        },
        "InstallChocolatey": {
          "type": "boolean",
          "description": "Whether to install Chocolatey"
        }
      }
    },
    "aiTools": {
      "type": "object",
      "properties": {
        "InstallClaudeCode": {
          "type": "boolean",
          "description": "Whether to install Claude Code"
        },
        "ClaudeCodeWSLUsername": {
          "type": "string",
          "description": "WSL username for Claude Code"
        },
        "ClaudeCodeSkipWSL": {
          "type": "boolean",
          "description": "Whether to skip WSL for Claude Code"
        },
        "InstallGeminiCLI": {
          "type": "boolean",
          "description": "Whether to install Gemini CLI"
        },
        "GeminiCLIWSLUsername": {
          "type": "string",
          "description": "WSL username for Gemini CLI"
        },
        "GeminiCLISkipWSL": {
          "type": "boolean",
          "description": "Whether to skip WSL for Gemini CLI"
        },
        "GeminiCLISkipNode": {
          "type": "boolean",
          "description": "Whether to skip Node.js for Gemini CLI"
        },
        "InstallCodexCLI": {
          "type": "boolean",
          "description": "Whether to install Codex CLI"
        },
        "CodexCLIWSLUsername": {
          "type": "string",
          "description": "WSL username for Codex CLI"
        },
        "CodexCLISkipWSL": {
          "type": "boolean",
          "description": "Whether to skip WSL for Codex CLI"
        }
      }
    },
    "ui": {
      "type": "object",
      "properties": {
        "Mode": {
          "type": "string",
          "enum": ["auto", "enhanced", "classic"],
          "description": "UI mode"
        },
        "DefaultUI": {
          "type": "string",
          "enum": ["enhanced", "classic"],
          "description": "Default UI"
        },
        "FallbackUI": {
          "type": "string",
          "enum": ["enhanced", "classic"],
          "description": "Fallback UI"
        },
        "ShowUISelector": {
          "type": "boolean",
          "description": "Whether to show UI selector"
        },
        "RememberUIChoice": {
          "type": "boolean",
          "description": "Whether to remember UI choice"
        }
      }
    },
    "versions": {
      "type": "object",
      "properties": {
        "PoetryVersion": {
          "type": "string",
          "description": "Poetry version"
        },
        "OpenTofuVersion": {
          "type": "string",
          "description": "OpenTofu version"
        },
        "PythonVersion": {
          "type": "string",
          "description": "Python version"
        },
        "NodeVersion": {
          "type": "string",
          "description": "Node.js version"
        }
      }
    },
    "infrastructure": {
      "type": "object",
      "properties": {
        "InitializeOpenTofu": {
          "type": "boolean",
          "description": "Whether to initialize OpenTofu"
        },
        "PrepareHyperVHost": {
          "type": "boolean",
          "description": "Whether to prepare Hyper-V host"
        },
        "RepoUrl": {
          "type": "string",
          "description": "Repository URL"
        },
        "LocalPath": {
          "type": "string",
          "description": "Local path for repository"
        },
        "ConfigFile": {
          "type": "string",
          "description": "Configuration file path"
        },
        "RunnerScriptName": {
          "type": "string",
          "description": "Runner script name"
        },
        "InfraRepoUrl": {
          "type": "string",
          "description": "Infrastructure repository URL"
        },
        "InfraRepoPath": {
          "type": "string",
          "description": "Infrastructure repository path"
        }
      }
    },
    "certificates": {
      "type": "object",
      "properties": {
        "CommonName": {
          "type": "string",
          "description": "Certificate common name"
        },
        "ValidityYears": {
          "type": "integer",
          "description": "Certificate validity in years"
        }
      }
    },
    "hyperv": {
      "type": "object",
      "properties": {
        "User": {
          "type": "string",
          "description": "Hyper-V user"
        },
        "Password": {
          "type": "string",
          "description": "Hyper-V password"
        },
        "Host": {
          "type": "string",
          "description": "Hyper-V host"
        },
        "Port": {
          "type": "integer",
          "description": "Hyper-V port"
        },
        "Https": {
          "type": "boolean",
          "description": "Whether to use HTTPS"
        },
        "Insecure": {
          "type": "boolean",
          "description": "Whether to allow insecure connections"
        },
        "UseNtlm": {
          "type": "boolean",
          "description": "Whether to use NTLM authentication"
        },
        "EnableManagementTools": {
          "type": "boolean",
          "description": "Whether to enable management tools"
        },
        "ProviderVersion": {
          "type": "string",
          "description": "Hyper-V provider version"
        },
        "ScriptPath": {
          "type": "string",
          "description": "Script path for Hyper-V"
        },
        "Timeout": {
          "type": "string",
          "description": "Hyper-V timeout"
        },
        "SwitchName": {
          "type": "string",
          "description": "Hyper-V switch name"
        },
        "VMPath": {
          "type": "string",
          "description": "VM path"
        },
        "ISOPath": {
          "type": "string",
          "description": "ISO path"
        },
        "Memory": {
          "type": "integer",
          "description": "Default VM memory in MB"
        },
        "ProcessorCount": {
          "type": "integer",
          "description": "Default VM processor count"
        },
        "DiskSize": {
          "type": "integer",
          "description": "Default VM disk size in GB"
        }
      }
    },
    "directories": {
      "type": "object",
      "properties": {
        "HyperVPath": {
          "type": "string",
          "description": "Hyper-V path"
        },
        "IsoSharePath": {
          "type": "string",
          "description": "ISO share path"
        }
      }
    },
    "logging": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "enum": ["DEBUG", "INFO", "WARN", "ERROR"],
          "description": "Logging level"
        },
        "file": {
          "type": "string",
          "description": "Log file path"
        },
        "console": {
          "type": "boolean",
          "description": "Whether to log to console"
        },
        "LogPath": {
          "type": "string",
          "description": "Log path"
        },
        "EnableConsoleLogging": {
          "type": "boolean",
          "description": "Whether to enable console logging"
        },
        "EnableFileLogging": {
          "type": "boolean",
          "description": "Whether to enable file logging"
        },
        "MaxLogFiles": {
          "type": "integer",
          "description": "Maximum number of log files"
        },
        "MaxLogSizeMB": {
          "type": "integer",
          "description": "Maximum log size in MB"
        }
      }
    },
    "scripts": {
      "type": "object",
      "properties": {
        "autorun": {
          "type": "boolean",
          "description": "Whether to autorun scripts"
        },
        "path": {
          "type": "string",
          "description": "Scripts path"
        },
        "timeout": {
          "type": "integer",
          "description": "Script timeout in seconds"
        }
      }
    },
    "environment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Environment name"
        },
        "platform": {
          "type": "string",
          "description": "Platform type"
        }
      }
    },
    "security": {
      "type": "object",
      "properties": {
        "RequireEncryption": {
          "type": "boolean",
          "description": "Whether to require encryption"
        },
        "AllowUnsignedScripts": {
          "type": "boolean",
          "description": "Whether to allow unsigned scripts"
        },
        "ValidateModules": {
          "type": "boolean",
          "description": "Whether to validate modules"
        },
        "SecureBootRequired": {
          "type": "boolean",
          "description": "Whether secure boot is required"
        }
      }
    }
  },
  "additionalProperties": true
}